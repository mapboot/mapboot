{
  "version": 3,
  "sources": ["../js/shared/models.js", "../js/viewer/models/models.js", "../js/viewer/cloud.js", "../js/viewer/navigation.js", "../js/viewer/selection.js", "../js/viewer/UI/direction.js", "../js/viewer/findPath.js", "../js/viewer/UI/searchbar.js", "../js/viewer/UI/toolbar.js", "../js/viewer/editor.js", "../js/viewer/UI/directionCanvas.js", "../js/viewer/locationIcons.js", "../js/viewer/draw.js", "../js/viewer/widget.js", "../js/viewer/mapboot.js"],
  "sourcesContent": ["\n\nexport const floorColor = '#EAEAEA';\nexport const publicColor = '#DDE1E2';\nexport const privateColor = '#C9CED2';\nexport const greenColor = '#6eb682';\nexport const sandColor = '#fae26a';\nexport const waterColor = '#87c4f5';\nexport const innerWallColor = '#C1C3C7';\nexport const outerWallColor = '#586974';\n\nexport const GroupType = Object.freeze({\n  REGULAR: 'regular',\n  TRANSIT: 'transit'\n});\n\n\n\n\nexport const StyleIds = Object.freeze({\n  FLOOR: 'floor',\n  PUBLIC: 'public',\n  PRIVATE: 'private',\n  INNERWALL: 'innerwall',\n  OUTERWALL: 'outerwall',\n  NONE: 'none',\n});\nexport const styleOrder = [\n\n  StyleIds.FLOOR,\n  StyleIds.PUBLIC,\n  StyleIds.PRIVATE,\n  StyleIds.INNERWALL,\n  StyleIds.OUTERWALL,\n  StyleIds.NONE,\n];\n\n\nexport class StyleModel {\n\n  constructor(id, color, lineThickness) {\n\n    // When color is passed as first param\n    this.id = id;\n    this.color = color;\n    this.lineThickness = lineThickness;\n    this.enabled = true;\n\n  }\n}\n\n\nexport const LocationType = Object.freeze({\n  Custom: 'Custom',\n  Exit: 'Exit',\n  Information: 'Information',\n  Restroom: 'Restroom',\n  FamilyRestroom: 'Family Restroom',\n  MaleRestroom: 'Male Restroom',\n  FemaleRestroom: 'Female Restroom',\n  Parking: 'Parking',\n  AccessibleRamp: 'Accessible Ramp',\n  ATM: 'ATM',\n  FirstAid: 'FirstAid',\n  Security: 'Security',\n  FireExtinguisher: 'Fire Extinguisher',\n  EmergencyExit: 'Emergency Exit',\n  LostAndFound: 'Lost And Found',\n  WaitingArea: 'Waiting Area',\n  ChargingStation: 'Charging Station',\n  VendingMachine: 'Vending Machine',\n  FoodService: 'Food Service',\n  Cafeteria: 'Cafeteria',\n  WaterFountain: 'Water Fountain',\n  SmokingArea: 'Smoking Area',\n  Playground: 'Playground',\n  GreenSpace: 'Green Space',\n  Kiosk: 'Kiosk',\n  Current_Kiosk: 'Current Kiosk',\n  FoodService: 'Food Service',\n  Taxi: 'Taxi',\n  Bus: 'Bus',\n  RideShare: 'RideShare',\n  Stairs: 'Stairs',\n  Escalator: 'Escalator',\n  Elevator: 'Elevator',\n  ServiceElevator: 'Service Elevator',\n  CrateElevator: 'CrateE levator',\n  FreightElevator: 'Freigh tElevator',\n  TrashCompactor: 'Trash Compactor',\n  TrashOpenBox: 'Trash Open Box',\n});\n\n\nexport const UnitType = Object.freeze({\n  Meters: 'm',\n  Feet: 'feet'\n});\n\n\nexport const DisplayType = Object.freeze({\n  None: 'None',\n  Icon: 'Icon',\n  Label: 'Label'\n});\n\n\nexport class Vec3 {\n  /**\n   * @param {{ X?: number, Y?: number, Z?: number, x?: number, y?: number, z?: number }} obj\n   */\n  constructor(obj = {}) {\n    // pick whichever casing your JSON has\n    this.x = obj.x ?? obj.X ?? 0;\n    this.y = obj.y ?? obj.Y ?? 0;\n    this.z = obj.z ?? obj.Z ?? 0;\n  }\n}\n\n", "import { StyleModel ,Vec3,   floorColor,publicColor,privateColor, greenColor,sandColor,waterColor,innerWallColor,outerWallColor, GroupType} from \"../../shared/models.js\";\n\n\nexport class LayerModel {\n  constructor(src = {}) {\n    this.name = src.name;\n    this.locations = [...src.locations];\n    this.lines = [...src.lines];\n\n    this.polygons = {};\n    if (src.polygons && typeof src.polygons === 'object') {\n      Object.entries(src.polygons).forEach(([pid, pData]) => {\n        this.polygons[pid] = new PolygonModel(pData);\n      });\n    }\n  }\n}\n\nexport class GroupModel {\n  constructor(src = {}) {\n    this.name = src.name;\n    this.type = src.type;\n    this.meta = src.meta;\n    this.center = src.center;\n    // \u2500\u2500\u2500 layers \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    this.layers = {};\n    if (src && typeof src.layers === 'object' && !Array.isArray(src.layers)) {\n      this.layers = Object.entries(src.layers).reduce((dict, [id, layData]) => {\n        const layer = new LayerModel(layData);\n        dict[id] = layer;\n        return dict;\n      }, {});\n    }\n  }\n}\n\n\nexport class MapModel {\n  constructor(src = {}) {\n    this.id = src.id;\n    this.name = src.name;\n    this.meta = src.meta;\n    this.owner = src.owner || \"Mapboot.com\";\n    this.groups = {};\n \n    // \u2500\u2500\u2500 group \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    if (src && typeof src.groups === 'object' && !Array.isArray(src.groups)) {\n      this.groups = Object.entries(src.groups).reduce((dict, [id, gData]) => {\n        const group = new GroupModel(gData);\n        dict[id] = group;\n        return dict;\n      }, {});\n    }\n\n    // \u2500\u2500\u2500 Layers \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    this.styles = {};\n    const defaults = [\n      ['none', null, 0],\n      ['floor', floorColor, 0],\n      ['public', publicColor, 0],\n      ['private', privateColor, 0],\n      ['innerwall', innerWallColor, 2],\n      ['outerwall', outerWallColor, 3],\n    ];\n\n    defaults.forEach(([id, color, lineThickness]) => {\n      const style = new StyleModel(id, color, lineThickness);\n      this.styles[id] = style;\n    });\n\n    // \u2500\u2500\u2500 Polygon Layers \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    Object.assign(this, src);\n    // for each group/layer, index polygons by styleId\n    for (const group of Object.values(this.groups)) {\n      for (const layer of Object.values(group.layers)) {\n        layer.polygonsByStyle = {};\n        for (const [polyId, poly] of Object.entries(layer.polygons || {})) {\n          const sid = poly.styleId || \"floor\";\n          (layer.polygonsByStyle[sid] ??= []).push(polyId);\n        }\n\n        layer.linesByStyle = {};\n        for (const [lineId, line] of Object.entries(layer.lines || {})) {\n          if (!line) continue;\n          const sid = line.styleId || \"none\";\n          (layer.linesByStyle[sid] ??= []).push(lineId);\n        }\n      }\n    }\n  }\n}\n\nexport class LocationModel {\n  constructor(src = {}) {\n    if (src) {\n      this.id = src.id;\n      this.name = src.name;\n      this.meta = src.meta;\n      this.groupId = src.groupId;\n      this.layerId = src.layerId;\n      this.locationType = src.locationType;\n      this.displayType = src.displayType;\n      this.center = src.center;\n      this.iconUrl = src.iconUrl;\n      this.polygonIds = [...src.polygonIds];\n    }\n  }\n}\n\n \nexport class PolygonModel {\n  constructor(src) {\n    this.points = [...src.points];\n    this.styleId = src.styleId;\n  }\n}\n\nexport class PointModel {\n\n  constructor(src = {}) {\n    if (src && typeof src === \"object\" && (\"position\" in src)) {\n      // JSON source path\n      this.position = new Vec3(src.position);\n      this.groupId = src.groupId;\n      this.layerId = src.layerId;\n    } else {\n      // Raw position path\n      this.position = new Vec3();\n      this.groupId = '';\n      this.layerId = '';\n    }\n  }\n  toJSON() {\n    return {\n      position: this.position,\n      groupId: this.groupId,\n      layerId: this.layerId,\n      accessPoint: this.accessPoint,\n    }\n  }\n}", "import { LocationModel} from \"./models/models.js\";\nconst getMapURL = \"https://mapbootpublicfunc-cxgzgbe9gkajfggy.eastus2-01.azurewebsites.net/api/get_map?code=YEXmtXrt9sUhtY3d-tXDB5GzBo0E53Vy92fHdQ_3-BteAzFuZOoOkQ==\";\n\nconst  getLocationByIdURL= \"https://mapbootpublicfunc-cxgzgbe9gkajfggy.eastus2-01.azurewebsites.net/api/get_location?code=YEXmtXrt9sUhtY3d-tXDB5GzBo0E53Vy92fHdQ_3-BteAzFuZOoOkQ==\";\n\nconst getPathFindingsURL = \"https://mapbootpublicfunc-cxgzgbe9gkajfggy.eastus2-01.azurewebsites.net/api/get_pathfinding?code=YEXmtXrt9sUhtY3d-tXDB5GzBo0E53Vy92fHdQ_3-BteAzFuZOoOkQ==\";\n\nconst  getLocationsURL= \"https://mapbootpublicfunc-cxgzgbe9gkajfggy.eastus2-01.azurewebsites.net/api/search_location?code=YEXmtXrt9sUhtY3d-tXDB5GzBo0E53Vy92fHdQ_3-BteAzFuZOoOkQ==\";\n \n/* ------------------------------------------------------------------ */\n/* helper: fetch JSON and throw on non\u2011OK                              */\nasync function getJson(url, headers = {}) {\n  const resp = await fetch(url, { mode: \"cors\", headers });\n  if (!resp.ok) throw new Error(`${resp.status}\u00A0${resp.statusText} \u2013 ${url}`);\n  return resp.json();\n}\n\n\nexport async function getMap({ mapid,\n  onSuccess,\n  onError }) {\n  try {\n    const [mapJson] = await Promise.all([\n      getJson(getMapURL, { 'mapid': mapid })\n    ]);\n    onSuccess?.(mapJson);\n  } catch (err) {\n    onError?.(err);\n  }\n}\n \n\nexport async function getLocations({ mapid, query,\n  onSuccess,\n  onError }) {\n  try {\n    const [locationsJson] = await Promise.all([\n      getJson(getLocationsURL, { 'mapid': mapid, 'query': query })\n    ]);\n    onSuccess?.(locationsJson);\n  } catch (err) {\n    onError?.(err);\n  }\n}\n \nexport async function getLocationById({ mapid, locationid}) {\n\n  console.log('Fetching location via headers \u2192', { mapid, locationid });\n\n  const res = await fetch(getLocationByIdURL, {\n    method: 'GET',\n    headers: {\n      'mapid':      mapid,\n      'locationid': locationid,\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (!res.ok) {\n    throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n  }\n\n  const json = await res.json();\n//  overlay?.classList.add('hidden');\n  return new LocationModel(json);   // or however you turn raw JSON into your model\n \n}\n\n\n\nexport async function getPathFinding({ mapid, fromlocationid, tolocationid,wchr,\n   onSuccess, onError }) {\n  if (!mapid || !fromlocationid || !tolocationid) return;\n  try {\n    const [pathFindingResultJson] = await Promise.all([ \n       await getJson(getPathFindingsURL, { 'mapid': mapid, 'fromlocationid': fromlocationid, 'tolocationid': tolocationid,'wchr':wchr , unit:'m'})\n    ]);\n\n          // Build query string to avoid CORS preflight on custom headers\n //  const url = `${getPathFindingsURLLocal}?mapid=${encodeURIComponent(mapid)}&fromlocationid=${encodeURIComponent(fromlocationid)}&//tolocationid=${encodeURIComponent(tolocationid)}&wchr=${encodeURIComponent(wchr)}`;\n //  const pathFindingResultJson = await getJson(url);\n\n\n    onSuccess?.(pathFindingResultJson);\n  } catch (err) {\n    console.error(\"PathFinding fetch error:\", err);\n    onError?.(err);\n    deadOverlay?.classList.remove(\"hidden\");\n  } finally {\n    loadingOverlay?.classList.add(\"hidden\");\n  }\n}\n", "\n\n// FSM States\nexport const STATES = {\n    IDLE: 'IDLE',\n    PANNING: 'PANNING'\n};\n\n// FSM Events\nexport const EVENTS = {\n    POINTER_DOWN: 'POINTER_DOWN',\n    POINTER_MOVE: 'POINTER_MOVE',\n    POINTER_UP: 'POINTER_UP',\n    WHEEL: 'WHEEL'\n};\n\n/**\n * Creates a navigation system for the given canvas.\n * @param {HTMLCanvasElement} canvas   Canvas element to attach navigation to\n * @param {Object}   [options]         Optional configuration\n * @param {Function} [options.onUpdate]  Callback invoked after every pan/zoom\n * @returns {Object} Navigator instance with cleanup methods\n */\nexport function createNavigator(canvas, options = {}) {\n    // options: initialPan {dx,dy}, initialScale, onUpdate callback\n    const {\n        onUpdate = () => { },\n        initialPan = { dx: 0, dy: 0 },\n        initialScale = 10\n    } = options;\n    if (!canvas) {\n        throw new Error('Canvas element is required');\n    }\n\n    // Transform state\n    let transform = {\n        scale: initialScale,\n        dx: initialPan.dx ?? 0,\n        dy: initialPan.dy ?? 0,\n        rotation: 0          // radians\n    };\n\n    // FSM state\n    let currentState = STATES.IDLE;\n    let lastPointer = { x: 0, y: 0 };\n\n    // Event handlers for each state\n    const stateHandlers = {\n        [STATES.IDLE]: {\n            [EVENTS.POINTER_DOWN]: (event) => {\n                const altKey = event.altKey || event.metaKey;\n                // Only start panning on left mouse button or primary touch\n                //   if (event.button === 0 || event.type === 'touchstart') {\n                if (altKey) {\n                    lastPointer.x = getEventX(event);\n                    lastPointer.y = getEventY(event);\n                    return STATES.PANNING;\n                }\n                return STATES.IDLE;\n            },\n            [EVENTS.POINTER_MOVE]: () => STATES.IDLE,\n            [EVENTS.POINTER_UP]: () => STATES.IDLE,\n            [EVENTS.WHEEL]: (event) => {\n                if (event.metaKey || event.ctrlKey) {\n                    handleRotate(event);\n                } else {\n                    handleZoom(event);\n                }\n                return currentState;   // remain in same FSM state\n            }\n        },\n\n        [STATES.PANNING]: {\n\n\n\n            //   [EVENTS.POINTER_DOWN]: () => STATES.PANNING,\n            [EVENTS.POINTER_MOVE]: (event) => {\n                handlePan(event);\n                return STATES.PANNING;\n            },\n            [EVENTS.POINTER_UP]: () => STATES.IDLE,\n            [EVENTS.WHEEL]: (event) => {\n                if (event.metaKey || event.ctrlKey) {\n                    handleRotate(event);\n                } else {\n                    handleZoom(event);\n                }\n                return currentState;   // remain in same FSM state\n            }\n        }\n    };\n\n    /**\n     * Get X coordinate from mouse or touch event\n     */\n    function getEventX(event) {\n        if (event.touches && event.touches.length > 0) {\n            return event.touches[0].clientX;\n        }\n        return event.clientX;\n    }\n\n    /**\n     * Get Y coordinate from mouse or touch event\n     */\n    function getEventY(event) {\n        if (event.touches && event.touches.length > 0) {\n            return event.touches[0].clientY;\n        }\n        return event.clientY;\n    }\n\n    /**\n     * Convert screen coordinates to canvas coordinates\n     * Handles the difference between CSS size and canvas resolution\n     */\n    function screenToCanvas(screenX, screenY) {\n        const rect = canvas.getBoundingClientRect();\n        const scaleX = canvas.width / rect.width;\n        const scaleY = canvas.height / rect.height;\n\n        const canvasX = (screenX - rect.left) * scaleX;\n        const canvasY = (screenY - rect.top) * scaleY;\n\n        return { x: canvasX, y: canvasY };\n    }\n\n    /**\n     * Handle panning logic\n     */\n    function handlePan(event) {\n        const currentX = getEventX(event);\n        const currentY = getEventY(event);\n        //  \n        //  const deltaX = currentX - lastPointer.x;\n        //  const deltaY = currentY - lastPointer.y;\n\n\n        // Convert both current and previous positions to canvas space\n        const curCanvas = screenToCanvas(currentX, currentY);\n        const prevCanvas = screenToCanvas(lastPointer.x, lastPointer.y);\n\n        const deltaX = curCanvas.x - prevCanvas.x;\n        const deltaY = curCanvas.y - prevCanvas.y;\n\n        // Update transform in canvas\u2011pixel units\n\n        // Update transform\n        transform.dx += deltaX;\n        transform.dy += deltaY;\n\n        // Update last pointer position\n        lastPointer.x = currentX;\n        lastPointer.y = currentY;\n\n        // Notify of change\n        onUpdate({ ...transform });\n    }\n\n    /**\n     * Handle zoom logic with mouse-centered pivot\n     */\n    function handleZoom(event) {\n        event.preventDefault();\n\n        // Calculate zoom factor from wheel delta\n        const deltaMode = event.deltaMode || 0;\n        const factor = deltaMode === 1 ? 15 : 1; // Line vs pixel scrolling\n        const zoomFactor = Math.exp(-event.deltaY * 0.001 * factor);\n\n        // Get mouse position in canvas coordinates\n        const mousePos = screenToCanvas(event.clientX, event.clientY);\n\n        // Apply zoom transformation\n        // The formula keeps the point under the mouse cursor stationary\n        const newScale = transform.scale * zoomFactor;\n        const newDx = mousePos.x - (mousePos.x - transform.dx) * zoomFactor;\n        const newDy = mousePos.y - (mousePos.y - transform.dy) * zoomFactor;\n\n        // Update transform\n        transform.scale = newScale;\n        transform.dx = newDx;\n        transform.dy = newDy;\n\n        // Notify of change\n        onUpdate({ ...transform });\n    }\n\n    /**\n     * Handle rotation logic with mouse\u2011centred pivot\n     * (invoked when Meta/Ctrl + wheel)\n     */\n    function handleRotate(event) {\n        event.preventDefault();\n\n        // Rotation delta (wheel up = clockwise)\n        const deltaMode = event.deltaMode || 0;\n        const factor = deltaMode === 1 ? 15 : 1;\n        const deltaRad = -event.deltaY * 0.002 * factor;   // tweak sensitivity\n\n        const { scale: s, rotation: \u03B8, dx, dy } = transform;\n\n        // Mouse position in canvas coords\n        const mousePos = screenToCanvas(event.clientX, event.clientY);\n\n        // Convert mousePos to world coords under current transform\n        const cos\u03B8 = Math.cos(-\u03B8);\n        const sin\u03B8 = Math.sin(-\u03B8);\n        const wx = ((mousePos.x - dx) * cos\u03B8 - (mousePos.y - dy) * sin\u03B8) / s;\n        const wy = ((mousePos.x - dx) * sin\u03B8 + (mousePos.y - dy) * cos\u03B8) / s;\n\n        // New rotation\n        const \u03B82 = \u03B8 + deltaRad;\n        const cos\u03B82 = Math.cos(\u03B82);\n        const sin\u03B82 = Math.sin(\u03B82);\n\n        // Adjust pan so (wx,wy) stays under cursor\n        const newDx = mousePos.x - s * (cos\u03B82 * wx - sin\u03B82 * wy);\n        const newDy = mousePos.y - s * (sin\u03B82 * wx + cos\u03B82 * wy);\n\n        // Commit\n        transform.rotation = \u03B82;\n        transform.dx = newDx;\n        transform.dy = newDy;\n\n        onUpdate({ ...transform });\n    }\n\n    /**\n     * Dispatch an event to the FSM\n     */\n    function dispatch(eventType, event) {\n        const handler = stateHandlers[currentState]?.[eventType];\n        if (handler) {\n            const nextState = handler(event);\n            if (nextState && nextState !== currentState) {\n                currentState = nextState;\n            }\n        }\n    }\n\n    // Event listeners\n    function onPointerDown(event) {\n        dispatch(EVENTS.POINTER_DOWN, event);\n    }\n\n    function onPointerMove(event) {\n        dispatch(EVENTS.POINTER_MOVE, event);\n    }\n\n    function onPointerUp(event) {\n        dispatch(EVENTS.POINTER_UP, event);\n    }\n\n    function onWheel(event) {\n        dispatch(EVENTS.WHEEL, event);\n    }\n\n    // Attach event listeners\n    canvas.addEventListener('mousedown', onPointerDown);\n    canvas.addEventListener('mousemove', onPointerMove);\n    canvas.addEventListener('mouseup', onPointerUp);\n    canvas.addEventListener('mouseleave', onPointerUp); // Treat mouse leave as pointer up\n    canvas.addEventListener('wheel', onWheel, { passive: false });\n\n    // Touch events\n    canvas.addEventListener('touchstart', onPointerDown, { passive: false });\n    canvas.addEventListener('touchmove', onPointerMove, { passive: false });\n    canvas.addEventListener('touchend', onPointerUp, { passive: false });\n\n    // Public API\n    return {\n        /**\n         * Get current transform state\n         */\n        getTransform() {\n            return { ...transform };\n        },\n\n        /**\n         * Set transform state\n         */\n        setTransform(newTransform) {\n            transform = { ...newTransform };\n            onUpdate({ ...transform });\n        },\n\n        /**\n         * Reset transform to default\n         */\n        reset() {\n            transform = { scale: 1.0, dx: 0, dy: 0, rotation: 0 };\n            onUpdate({ ...transform });\n        },\n\n        /**\n         * Get current FSM state (for debugging)\n         */\n        getState() {\n            return currentState;\n        },\n\n        /**\n         * Clean up event listeners\n         */\n        destroy() {\n            canvas.removeEventListener('mousedown', onPointerDown);\n            canvas.removeEventListener('mousemove', onPointerMove);\n            canvas.removeEventListener('mouseup', onPointerUp);\n            canvas.removeEventListener('mouseleave', onPointerUp);\n            canvas.removeEventListener('wheel', onWheel);\n            canvas.removeEventListener('touchstart', onPointerDown);\n            canvas.removeEventListener('touchmove', onPointerMove);\n            canvas.removeEventListener('touchend', onPointerUp);\n        }\n    };\n}\n\n// For non-module environments\nif (typeof window !== 'undefined') {\n    window.createNavigator = createNavigator;\n}\n", "import { refreshViewport,focusOnLayer } from \"./draw.js\";\nimport { map } from \"./editor.js\";\nimport { LocationModel } from \"./models/models.js\";\n\nexport let pathFindingResult = {};\nexport let layerId = null;\nexport let location_From = null;\nexport let location_To = null;\nexport let groupId = null;\nexport let polygonId = null;\nexport let wchr = false;\nexport let unit = \"m\";\n\nexport function setLocation(json) {\n  if (!json) return;\n  location = new LocationModel(json);\n  console.log(\"location  :\", location);\n}\n\nexport function setPathFindingResult(newResult) {\n  if (!newResult) return;\n  pathFindingResult = newResult;\n\n  const layersPanel = document.getElementById(\"layersPanel\");\n  if (layersPanel) {\n    layersPanel.style.display = 'none';\n  }\n  console.log(\"new path finding reslut:\", pathFindingResult);\n}\n\nexport function resetPathFinding(isFrom) {\n  pathFindingResult = null;\n  if (isFrom) location_From = null;\n  else location_To = null;\n \n  const layersPanel = document.getElementById(\"layersPanel\");\n  if (layersPanel) {\n    layersPanel.style.display = 'block';\n  }\n  console.log(\"clean path finding\");\n}\n\nexport function setPolygonId(id) {\n  if (!id) return;\n  polygonId = id;\n  console.log(\"SurfaceId set to:\", id);\n}\n\nexport function setGroupId(id) {\n  if (!id) return;\n  groupId = id;\n  console.log(\"GroupId set to:\", id);\n\n}\n\nexport function setLocation_From(location) {\n  if (!location) return;\n  location_From = location;\n\n}\n\nexport function setLocation_To(location) {\n  if (!location) return;\n  location_To = location;\n\n}\n\nexport function setWchr(v) {\n  wchr = v;\n}\n\nexport function setUnit(v) {\n  if (v !== 'm' || v !== 'ft') v = 'm';\n  unit = v;\n}\nexport function setLayerId(newLayerId, dofocusOnLayer = true) {\n  if (!newLayerId) return;\n  layerId = newLayerId;\n  if (dofocusOnLayer) {\n    const group = map.groups[groupId];\n    if (!group) return;\n\n    const layer = group.layers[layerId];\n    if (!layer) return;\n\n    focusOnLayer(groupId,layerId);\n\n    const payload = { newLayerId };\n    window.dispatchEvent(\n      new CustomEvent('indoorlens_viewer:floorChangeDelegate', { detail: payload })\n    );\n\n    refreshViewport();\n  }\n  console.log(\"LayerId set to:\", newLayerId);\n}\n", "import { location_From, setLayerId, setGroupId, pathFindingResult, groupId, layerId } from \"../selection.js\";\nimport { focusOnVertices } from \"../draw.js\";\nimport { map } from \"../editor.js\";\n\nlet directionsList = [];\nlet currentIdx = 0;\n//let listenersInitialized = false;\n\nwindow.addEventListener('IndoorLens:directionPrev', () => {\n    if (currentIdx > 0) {\n        currentIdx--;\n        render();\n    }\n});\n\nwindow.addEventListener('IndoorLens:directionNext', () => {\n    if (currentIdx < directionsList.length - 1) {\n        currentIdx++;\n        render();\n    }\n});\n\n\nexport function startDirection() {\n    const dirEl = document.getElementById('directions');\n    const banner = document.getElementById('directionsBanner');\n\n    // Build the flattened directions array just once\n    if (Object.keys(pathFindingResult).length && directionsList.length === 0) {\n        for (const [bId, layers] of Object.entries(pathFindingResult)) {\n            for (const [layId, seg] of Object.entries(layers)) {\n                directionsList.push({ groupId: bId, layerId: layId, direction: seg.direction });\n            }\n        }\n\n        // Start index is the layer that contains the start location\n        const anchorIdx = directionsList.findIndex(\n            d => d.groupId === location_From.groupId && d.layerId === location_From.layerId\n        );\n        currentIdx = anchorIdx !== -1 ? anchorIdx : 0;\n        //console.log(\"currentIdx\" + currentIdx);\n    }\n\n\n\n    // if (!listenersInitialized) {\n    //     document.getElementById('prevDir').addEventListener('click', () => {\n    //         if (currentIdx > 0) {\n    //             currentIdx--;\n    //             render();\n    //         }\n    //     });\n    //     document.getElementById('nextDir').addEventListener('click', () => {\n    //         if (currentIdx < directionsList.length - 1) {\n    //             currentIdx++;\n    //             render();\n    //         }\n    //     });\n    //     listenersInitialized = true;\n    // }\n    render();\n}\n\nfunction render() {\n    if (directionsList.length === 0) return;\n    // only render if within valid range\n    if (currentIdx < 0 || currentIdx >= directionsList.length) return;\n    const segment = directionsList[currentIdx];\n    setGroupId(segment.groupId);\n    setLayerId(segment.layerId);\n    window.dispatchEvent(new Event('IndoorLens:floorChangeDelegate'));\n    //  dirEl.textContent = segment.direction;\n    //   banner.classList.remove('hidden');\n    smartFocus();\n}\n\nexport function resetDirections() {\n\n    directionsList.length = 0;\n    currentIdx = 0;\n}\n/*\n\nexport function updateDirections() {\n  if (!pathFindingResult) return;\n  const banner = document.getElementById('directionsBanner');\n  const directionsText = document.getElementById('directions');\n\n  const buildingResult = pathFindingResult[groupId];\n  if (!buildingResult) { return; }\n  const floorResult = buildingResult[layerId];\n  if (!floorResult) { return; }\n\n\n  const direction = floorResult.direction;\n\n  if (direction) {\n    directionsText.textContent = direction;\n    banner.classList.remove('hidden');\n  } else {\n    banner.classList.add('hidden');\n  }\n  return;\n\n}*/\n\nfunction smartFocus() {\n\n    if (!pathFindingResult || !Object.keys(pathFindingResult).length) return;\n    const buildingResult = pathFindingResult[groupId];\n    if (!buildingResult) { return; }\n    const floorResult = buildingResult[layerId];\n    if (!floorResult) { return; }\n\n    //add focus of path finding result \n    const points = floorResult.segment;\n    const verts = [];\n    points.forEach(point => {\n        verts.push({ x: point.x, y: point.y });\n    });\n\n    //add focus on group as we// \n    const group = map.groups[groupId];\n    if (!group) return;\n      const layer = group.layers[layerId];\n    if (!group) return;\n        const stylePolygonIds = layer.polygonsByStyle?.[\"floor\"];\n        if (!stylePolygonIds) return;\n\n        stylePolygonIds.forEach(polyId => {\n            const polygon = layer.polygons[polyId];\n            polygon.points.forEach((p, i) => {\n                verts.push({ x: p.x, y: p.y });\n            });\n        });\n\n    if (verts.length) focusOnVertices(verts, { padding: 250 });\n}", "import { refreshViewport,   setAnimationFrameId, pathAnimation, cancelAnimation } from \"./draw.js\";\nimport { setPathFindingResult } from \"./selection.js\";\nimport { resetDirections, startDirection } from \"./UI/direction.js\";\nimport { getPathFinding, getLocationById } from \"./cloud.js\";\n\n\n\nexport function findPath(mapid, fromlocationid, tolocationid, wchr,unit) {\nresetDirections();\n    cancelAnimation();\n    const animationFrameId = requestAnimationFrame(pathAnimation);\n    setAnimationFrameId(animationFrameId);\n\n\n    const loadingOverlay = document.getElementById(\"loadingOverlay\");\n    const deadOverlay = document.getElementById(\"deadOverlay\");\n    loadingOverlay?.classList.remove(\"hidden\");\n    deadOverlay?.classList.add(\"hidden\");\n    getPathFinding({\n        mapid, fromlocationid, tolocationid, wchr,unit,\n        onSuccess: (pathJson) => {\n            const path = pathJson;\n            setPathFindingResult(path)\n\n            console.log(\"path finding data success:\" + JSON.stringify(pathJson));\n            loadingOverlay?.classList.add(\"hidden\");\n            deadOverlay?.classList.add(\"hidden\");\n        },\n        onError: e => {\n            console.error(e);\n            console.error(\"could not get path finding data from cloud, error:\", e);\n            loadingOverlay?.classList.add(\"hidden\");\n            deadOverlay?.classList.remove(\"hidden\");\n        }\n    })\n        .finally(() => {\n            startDirection();\n            refreshViewport();\n        });\n}\n\n\n\n\n/*\nexport function getLocationBy_Id(mapid, locationid) {\n  const overlay = document.getElementById('loadingOverlay');\n  overlay?.classList.remove('hidden');\n\n  return new Promise(resolve => {\n    getLocationById({\n      mapid,\n      locationid,\n      onSuccess: locJson => {\n        const loc = setLocation(locJson);\n        console.log('location data is:', locJson);\n        resolve(loc);\n      },\n      onError: err => {\n        console.error('could not get location data:', err);\n        resolve(null);\n      }\n    });\n  }).finally(() => {\n    overlay?.classList.add('hidden');\n    refreshViewport();\n  });\n}*/", "import { refreshViewport, cancelAnimation, focusOnVertices } from \"../draw.js\";\nimport { findPath } from \"../findPath.js\";\nimport { map } from \"../editor.js\";\nimport { setLocation_From, setLocation_To, location_From, location_To, setLayerId, \n    setGroupId, setPathFindingResult, resetPathFinding, wchr, unit,\n } from \"../selection.js\";\nimport { getLocations, getPathFinding } from \"../cloud.js\";\n\n\n\n\n\nexport function initSearch() {\n\n    const inputFrom = document.getElementById(\"from\");\n    const inputTo = document.getElementById(\"to\");\n    const resultsListFrom = document.getElementById(\"fromResultsList\");\n    const resultsListTo = document.getElementById(\"toResultsList\");\n    const btnFromClear = document.getElementById(\"btnFromClear\");\n    const btnToClear = document.getElementById(\"btnToClear\");\n\n    inputFrom.addEventListener(\"input\", () => {\n        btnFromClear.disabled = inputFrom.value.trim() === \"\";\n        console.log(\"search field  changed from\");\n    });\n\n    // optional: clicking the X clears the field\n    btnFromClear.addEventListener(\"click\", () => {\n        inputFrom.value = \"\";\n        // Clear the \"from\" results list when the input is cleared\n        resultsListFrom.innerHTML = \"\";\n        btnFromClear.disabled = true;\n        inputFrom.focus();           // put the cursor back in the box\n        const banner = document.getElementById('directionsBanner');\n        banner.classList.add('hidden');\n\n        setLocation_To(null);\n        resetPathFinding(true);\n        setPathFindingResult({});\n        // directionsList.length = 0;\n        // currentIdx = 0;\n        cancelAnimation();\n        refreshViewport();\n    });\n\n\n    // toggle on every keystroke / paste / delete\n    inputTo.addEventListener(\"input\", () => {\n        btnToClear.disabled = inputTo.value.trim() === \"\";\n        console.log(\"search field  changed to\");\n    });\n\n    // optional: clicking the X clears the field\n    btnToClear.addEventListener(\"click\", () => {\n        inputTo.value = \"\";\n        // Clear the \"to\" results list when the input is cleared\n        resultsListTo.innerHTML = \"\";\n        btnToClear.disabled = true;\n        inputFrom.focus();           // put the cursor back in the box\n        const banner = document.getElementById('directionsBanner');\n        banner.classList.add('hidden');\n\n        setLocation_From(null);\n        resetPathFinding(false);\n        setPathFindingResult({});\n        //  directionsList.length = 0;\n        // currentIdx = 0;\n        cancelAnimation();\n        refreshViewport();\n\n    });\n\n    // initialize search handlers once\n    textSearch(inputFrom, resultsListFrom);\n    textSearch(inputTo, resultsListTo);\n\n    // Close dropdown when the user leaves the input\n    inputFrom.addEventListener(\"blur\", () => {\n        // Delay so clicks on results still register\n        setTimeout(() => { resultsListFrom.innerHTML = \"\"; }, 200);\n    });\n    inputTo.addEventListener(\"blur\", () => {\n        setTimeout(() => { resultsListTo.innerHTML = \"\"; }, 200);\n    });\n\n    // Re-run search when the input regains focus\n    inputFrom.addEventListener(\"focus\", () => {\n        const query = inputFrom.value.trim().toLowerCase();\n        if (query) {\n            onSearchInput(query, resultsListFrom);\n        }\n    });\n    inputTo.addEventListener(\"focus\", () => {\n        const query = inputTo.value.trim().toLowerCase();\n        if (query) {\n            onSearchInput(query, resultsListTo);\n        }\n    });\n}\n\nlet searchTimeout;\n\nfunction onSearchInput(query, resultsList) {\n    // Clear the previous timeout if user is still typing\n    clearTimeout(searchTimeout);\n\n    // Set a new timeout\n    searchTimeout = setTimeout(() => {\n        searchLocations(query, resultsList);\n    }, 300); // Wait 300ms after user stops typing\n}\n\nfunction searchLocations(query, resultsList) {\n    const mapid = map.id;\n    getLocations({\n        mapid, query,\n        onSuccess: (locationsJson) => {\n            const result = [...locationsJson];\n\n            resultsList.innerHTML = result\n                .map(rawLocation => {\n                    if (location_From && location_From.id == rawLocation.id) return;\n                    if (location_To && location_To.id == rawLocation.id) return;\n\n                    //    const locationAddress = makeLocationAddress(displayName, buildingName, floorName);\n                    const locationAddress = makeLocationAddress(rawLocation);\n\n                    return `<li\n            class=\"list-group-item list-group-item-action p-1\"\n            data-rawLocation='${JSON.stringify(rawLocation)}'>\n            ${locationAddress}\n          </li>`;\n                })\n                .join(\"\");\n\n        },\n        onError: e => {\n            console.error(e);\n        }\n    })\n        .finally(() => {\n            refreshViewport();\n        });\n}\n\nfunction normalizeForSearch(str) {\n    return str\n        .toLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '');\n}\n\nfunction capitalizeFirst(str) {\n    if (!str) return str;              // handle empty/null\n    return str.charAt(0).toUpperCase() // upper-case first char\n        + str.slice(1);               // append remainder unchanged\n}\n\nexport function makeLocationAddress(location) {\n\n    const groupId = location.groupId;\n    const layerId = location.layerId;\n    //    const locationId = location.id;\n    //   const location = location;\n    const displayName = location.name\n        ? location.name\n        : location.locationType;\n    //  console.log(\"match found\" + rawLocation.name + \" location id\" + locationId);\n    const group = map.groups[groupId]\n    if (!group) return;\n    const buildingName = group.name;\n\n    const layer = group.layers[layerId]\n    if (!layer) return;\n    const floorName = layer.name;\n    // Normalize & capitalize each segment once\n    const parts = [displayName, buildingName, floorName]\n        .map(normalizeForSearch)\n        .map(capitalizeFirst);\n\n    const [D, B, F] = parts;\n\n    // Pick one of several natural templates:\n    const templates = [\n        `${D} at ${B}, ${F}`,\n        `${D}, ${F} of ${B}`,\n        `${D} on the ${F} in ${B}`,\n        `${F}, ${B} \u2014 ${D}`,\n        `${D} (${F}, ${B})`\n    ];\n\n    // For example, always use the first template:\n    return templates[2];\n\n    // Or to randomly pick:\n    // return templates[Math.floor(Math.random() * templates.length)];\n}\n\n\n// reusable autocomplete setup\nfunction textSearch(inputField, resultsList) {\n    inputField.addEventListener(\"input\", () => {\n        const query = inputField.value.trim().toLowerCase();\n        if (!query) {\n            resultsList.innerHTML = \"\";\n            return;\n        }\n        onSearchInput(query, resultsList);\n    });\n\n    // delegate click handling so you can pick an entry\n    resultsList.addEventListener(\"click\", e => {\n        const li = e.target.closest(\"li\");\n        if (!li) return;\n        //  const groupId = li.getAttribute('data-groupId');\n        //  const layerId = li.getAttribute('data-layerId');\n        //  const locationId = li.getAttribute('data-locationId');\n        const rawLocation = li.getAttribute('data-rawlocation');\n        const locationAddress = li.textContent.trim();\n\n        //console.log(\"result clicked groupId:\" + groupId + \" flooid\" + layerId + \" locationId\" + locationId);\n        console.log(\"raw result clicked:\" + rawLocation);\n\n        const location = JSON.parse(rawLocation);\n\n        // set the input value to the chosen text\n        inputField.value = locationAddress;\n        // clear the dropdown\n        resultsList.innerHTML = \"\";\n\n        if (resultsList.getAttribute('data-type') === 'from') setLocation_From(location);\n        else if (resultsList.getAttribute('data-type') === 'to') setLocation_To(location);\n\n        if (location_From && location_To) {\n            //    console.log(\"searching from\" +location_From+\" to\"+location_To);\n            //  const wchr = \"false\";\n            findPath(map.id, location_From.id, location_To.id,wchr,unit);\n        } else {\n            setGroupId(location.groupId);\n            setLayerId(location.layerId);\n\n            if (location.polygonIds.length) {\n                const verts = [];\n                location.polygonIds.forEach(polygonId => {\n                    const polygon = map.groups[location.groupId].layers[location.layerId].polygons[polygonId];\n                    polygon.points.forEach(point => {\n                        verts.push({ x: point.x, y: point.y });\n                    });\n                });\n                //   console.log(\"forcus on vertices   \", JSON.stringify(verts));\n                if (verts.length) focusOnVertices(verts, { padding: 300 });\n            }\n        }\n\n        refreshViewport();\n\n    });\n\n}", "import { resizeAllCanvases, centerView } from \"../draw.js\";\nimport { groupId, layerId, setLayerId, setWchr, wchr, unit, location_From, location_To } from \"../selection.js\";\nimport { map } from \"../editor.js\";\nimport { findPath } from \"../findPath.js\";\n\n/** Flattened list of all direction steps across every group & layer.\n *  Each item: { groupId, layerId, direction }\n */\nlet fullscreen = false;\n\n// viewer/toolbar.js\nexport function initToolbar() {\n  // 1\uFE0F\u20E3  Ensure the DOM is ready before querying elements\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initToolbar, { once: true });\n    return;\n  }\n\n\n  // 2\uFE0F\u20E3  Grab the button and root\n  const centerBtn = document.getElementById(\"centerviewer\");\n  const fullScreenBtn = document.getElementById('fullscreenviewer');\n  const accessibilityBtn = document.getElementById('accessibility');\n  const nextLayerBtn = document.getElementById('nextLayer');\n  const previousLayerBtn = document.getElementById('previousLayer');\n\n\n  // const floorLabel = document.getElementById('floorLabel');\n  const copyLinkBtn = document.getElementById('copyLink');\n\n\n  const root = document.getElementById('canvasroot');\n  if (!fullScreenBtn || !root) {\n    console.warn('[IndoorLens] fullscreen toolbar init: required element(s) not found');\n    return;\n  }\n\n  centerBtn.addEventListener(\"click\", () => {\n    centerView(10);\n  });\n\n  accessibilityBtn.addEventListener(\"click\", () => {\n    setWchr(!wchr);\n    updateAccessibilityIcon();\n    if (location_From && location_To) findPath(map.id, location_From.id, location_To.id, wchr, unit);\n  });\n\n  // 3\uFE0F\u20E3  Click handler\n  fullScreenBtn.addEventListener('click', () => {\n    console.log('fullscreen btn clicked');\n    const isFS = document.fullscreenElement\n      || document.webkitFullscreenElement\n      || document.msFullscreenElement;\n\n    if (isFS) {\n      (document.exitFullscreen\n        || document.webkitExitFullscreen\n        || document.msExitFullscreen\n      ).call(document);\n      fullscreen = false;\n    } else {\n      (root.requestFullscreen\n        || root.webkitRequestFullscreen\n        || root.msRequestFullscreen\n      ).call(root);\n      fullscreen = true;\n    }\n\n    updateFullscreenIcon();\n  });\n\n  // 4\uFE0F\u20E3  Optional: update icon & resize in a single place\n  document.addEventListener('fullscreenchange', () => {\n    // updateIcon();        // your custom icon swap\n    resizeAllCanvases();    // keep canvases in sync\n  });\n\n\n\n\n  function nextLayerId(group, currentId) {\n    const keys = Object.keys(group.layers);\n    const curIdx = keys.indexOf(String(currentId));\n    if (curIdx === -1) return currentId;\n    const newLayerIndex = Math.min(curIdx + 1, keys.length - 1);            // not found\n \n\n        // Disable buttons when reaching ends\n    nextLayerBtn.style.opacity = (newLayerIndex === keys.length - 1)? 0.4:1;\n    previousLayerBtn.style.opacity =(newLayerIndex === 0)? 0.4:1;\n \n    return keys[newLayerIndex] // clamp at last\n  }\n\n  function previousLayerId(group, currentId) {\n    const keys = Object.keys(group.layers);\n    const curIdx = keys.indexOf(String(currentId));\n    if (curIdx === -1) return currentId;\n    const newLayerIndex = Math.max(curIdx - 1, 0);\n\n     nextLayerBtn.style.opacity = (newLayerIndex === keys.length - 1)? 0.4:1;\n    previousLayerBtn.style.opacity = (newLayerIndex === 0)? 0.4:1;\n    return keys[newLayerIndex];              // clamp at first\n  }\n\n  /* ------------------------------------------------------------------ */\n  /* usage in your click handlers */\n\n  nextLayerBtn.addEventListener('click', () => {\n    console.log(\"nextLayerBtn clicked\");\n    const group = map.groups[groupId];\n    if (!group) return;\n\n    const newLayerId = nextLayerId(group, layerId);\n    if (newLayerId === layerId) return;                // already at last\n    setLayerId(newLayerId);\n  });\n\n  previousLayerBtn.addEventListener('click', () => {\n    console.log(\"previousLayerBtn clicked\");\n    const group = map.groups[groupId];\n    if (!group) return;\n\n    const newLayerId = previousLayerId(group, layerId);\n    if (newLayerId === layerId) return;                // already at first\n    // floorChangeDelegate(newLayerId);\n    setLayerId(newLayerId);\n\n  });\n\n  /* Copy to clipboard */\n  copyLinkBtn.addEventListener('click', async () => {\n    // Build the shareable link\n    const params = new URLSearchParams();\n    params.set('mapid', map.id);\n    params.set('type', window.mapboot.type);\n    if (location_From) params.set('from', location_From.id);\n    if (location_To) params.set('to', location_To.id);\n    const link = `${window.location.origin}${window.location.pathname.split('?')[0]}?${params.toString()}`;\n\n    try {\n      // Copy directly to clipboard\n      await navigator.clipboard.writeText(link);\n      alert('Link copied to clipboard!');\n    } catch (err) {\n      // Fallback: show a prompt (selects entire text)\n      const result = window.prompt('Copy the link below:', link);\n      if (result === null) {\n        // User cancelled\n        return;\n      }\n    }\n  });\n\n  updateFullscreenIcon();\n  updateAccessibilityIcon();\n}\n\n\n\n\n\nfunction updateFullscreenIcon() {\n  const fullScreenBtn = document.getElementById('fullscreenviewer');\n  const img = fullScreenBtn.querySelector('img');\n  if (!img) return;\n  img.src = fullscreen ? 'https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Minimize.png'\n    : 'https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Maximize.png';\n}\n\n\nexport function updateAccessibilityIcon() {\n  const accessibilityBtn = document.getElementById('accessibility');\n  const img = accessibilityBtn.querySelector('img');\n  if (!img) return;\n  img.src = wchr ? 'https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Wchr.png'\n    : 'https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Walk.png';\n\n  console.log(\"updateAccessibilityIcon \", wchr);\n}\n", "import { MapModel } from \"./models/models.js\";\n import { findPath } from \"./findPath.js\";\nimport { focusOnVertices,focusOnGroup, focusOnLocation } from \"./draw.js\";\nimport { getLocationById } from \"./cloud.js\";\nimport { makeLocationAddress } from \"./UI/searchbar.js\";\nimport { updateAccessibilityIcon } from \"./UI/toolbar.js\";\nimport { setGroupId, setLayerId, setLocation_From, setLocation_To, setLocation, location_From, location_To, setWchr, setUnit, unit, wchr } from \"./selection.js\";\n\nexport let map;\n//export let pathFindingPath;\n\n\n\n\nexport function setMap(json) {\n    map = new MapModel(json);\n //   console.log(\"MapModel :\", map);\n\n    setWchr(window.mapboot.wchr);\n    setUnit(window.mapboot.unit);\n\n    autoLoadActionFromURL();\n    autoSelection();\n    updateAccessibilityIcon();\n\n    const locationBadge = document.getElementById('locationBadge');\n  // or badge.getElementsByTagName('span')[0]\nlocationBadge.textContent =  map.name;\n\n    const ownerBadge = document.getElementById('ownerBadge');\n   ownerBadge.textContent= map.owner;\n \n\n  \n\n  locationBadge.textContent= map.name;\n  ownerBadge.textContent= map.owner;\n}\n//http://localhost:5209/viewer/index?mapid=a878e070&fromid=471bd8cb&toid=954bc716\nexport async function autoLoadActionFromURL() {\n    const { mapid: mapId, fromid: fromId, toid: toId } = window.mapboot;\n    if (mapId) {\n        let fromLoc = undefined;\n        let toLoc = undefined;\n\n        if (fromId) fromLoc = await getLocationById({ mapid: mapId, locationid: fromId });\n        if (toId) toLoc = await getLocationById({ mapid: mapId, locationid: toId });\n\n        if (fromLoc) setLocation_From(fromLoc);\n        if (toLoc) setLocation_To(toLoc);\n\n        if (location_From && location_To) {\n            findPath(mapId, location_From.id, location_To.id, wchr, unit);\n            console.log('Automatic pathfinding requested:', mapId, location_From.id, location_To.id);\n\n            const inputFrom = document.getElementById(\"from\");\n            inputFrom.value = makeLocationAddress(location_From);\n            const btnFromClear = document.getElementById(\"btnFromClear\");\n            btnFromClear.disabled = false;\n\n            const inputTo = document.getElementById(\"to\");\n            inputTo.value = makeLocationAddress(location_To);\n            const btnToClear = document.getElementById(\"btnToClear\");\n            btnToClear.disabled = false;\n\n        } else if (location_From) {\n            focusOnLocation(location_From.id);\n            const address = makeLocationAddress(location_From);\n\n            const inputFrom = document.getElementById(\"from\");\n            inputFrom.value = address;\n            const btnFromClear = document.getElementById(\"btnFromClear\");\n            btnFromClear.disabled = false;\n        } else if (location_To) {\n            focusOnLocation(location_To.id);\n            const address = makeLocationAddress(location_To);\n\n            const inputTo = document.getElementById(\"to\");\n            inputTo.value = address;\n            const btnToClear = document.getElementById(\"btnToClear\");\n            btnToClear.disabled = false;\n        }\n    }\n}\n\n\n//export function setPathFindingPath(v) {\n//    pathFindingPath = v;\n//    console.log(\"path finding path :\", pathFindingPath);\n//}\n\nfunction autoSelection() {\n    const firstGroupId = Object.keys(map.groups)[0];\n    if (!firstGroupId) return;\n\n    setGroupId(firstGroupId);\n    const group = map.groups[firstGroupId];\n\n    if (!Object.keys(group.layers).length) return;\n    const firstLayerId = Object.keys(group.layers)[0];        // group but no layers\n\n    setLayerId(firstLayerId);\n}\n\n\n//function focusOnLocation(location) {\n//    setLocation_From(location);\n//    setGroupId(location.groupId);\n//    setLayerId(location.layerId);\n//\n//    console.log(\"location\", location);\n//    if (location.polygonIds.length) {\n//        const verts = [];\n//        location.polygonIds.forEach(polygonId => {\n//            const polygon = map.groups[location.groupId].layers[location.layerId].polygons[polygonId];\n//            polygon.points.forEach(point => {\n//                verts.push({ x: point.x, y: point.y });\n//            });\n//        });\n//        if (verts.length) focusOnVertices(verts, { padding: 300 });\n//    }\n//}", "/**\n * Append a horizontal dashed connector to the parent.\n * @param {HTMLElement} parent\n * @param {number} width\n */\nfunction appendDashedConnector(parent, width = 40) {\n  const dash = document.createElement(\"div\");\n  dash.style.width = `${width}px`;\n  dash.style.height = \"0px\";\n  dash.style.borderTop = \"2px dashed #999\";\n  parent.appendChild(dash);\n}\nimport { map } from \"../editor.js\";\nimport { canvasDirection, dctx } from \"../draw.js\";\nimport {\n  groupId,\n  layerId,\n  pathFindingResult,\n  location_From,\n  location_To,\n  unit\n} from \"../selection.js\";\nimport { GroupType } from \"../../shared/models.js\";\nimport { GroupModel } from \"../models/models.js\";\n\nconst destColor = \"#911919ff\";\nconst deslectColor = \"#e0e0e0ff\";\nconst startColor = \"#25872fff\";\nconst transitColor = \"rgba(255, 247, 0, 1)\";\n\n/**\n * Render a location label with a connector line.\n * @param {HTMLElement} parent\n * @param {\"left\"|\"right\"} side   left = start label, right = dest label\n * @param {string} labelText\n */\nfunction renderLocationLabel(parent, side, labelText) {\n  const wrap = document.createElement(\"div\");\n  wrap.style.display = \"flex\";\n  wrap.style.alignItems = \"center\";\n  wrap.style.fontFamily = \"'Roboto', sans-serif\";\n  wrap.style.fontSize = \"11px\";\n  // wrap.style.padding = \"6px 10px\";\n\n  // Default black; caller may override via style.color\n  wrap.style.color = \"#000\";\n\n  if (side === \"left\") {\n    const label = document.createElement(\"span\");\n    label.textContent = labelText;\n    // label.style.marginRight = \"6px\";\n    /* --- keep direction bar centred regardless of text length --- */\n    label.style.display = \"inline-block\";\n    label.style.width = \"80px\";          /* fixed width */\n    label.style.paddingRight = \"2px\";\n    label.style.textAlign = \"right\";\n    label.style.whiteSpace = \"nowrap\";\n    label.style.overflow = \"hidden\";\n    label.style.textOverflow = \"ellipsis\";\n    wrap.appendChild(label);\n\n    const line = document.createElement(\"div\");\n    line.style.flexGrow = \"1\";\n    line.style.height = \"1px\";\n    line.style.background = \"#000\";\n    wrap.appendChild(line);\n  } else {\n    const line = document.createElement(\"div\");\n    line.style.flexGrow = \"1\";\n    line.style.height = \"1px\";\n    line.style.background = \"#000\";\n    wrap.appendChild(line);\n\n    const label = document.createElement(\"span\");\n    label.textContent = labelText;\n    //label.style.marginLeft = \"6px\";\n    /* --- fixed width with ellipsis --- */\n    label.style.display = \"inline-block\";\n    label.style.width = \"80px\";\n    label.style.paddingLeft = \"2px\";\n    label.style.textAlign = \"left\";\n    label.style.whiteSpace = \"nowrap\";\n    label.style.overflow = \"hidden\";\n    label.style.textOverflow = \"ellipsis\";\n    label.style.fontFamily = \"'Roboto', 'Segoe UI', 'Noto Sans', sans-serif\";\n    wrap.appendChild(label);\n  }\n\n  parent.appendChild(wrap);\n}\n\n/** Init click / hover listeners (unchanged) */\nexport function initDirectionUI() {\n  const container = canvasDirection.parentElement;\n  container.addEventListener(\"click\", handleDirectionCanvasClick);\n  container.addEventListener(\"pointermove\", handleDirectionCanvasMove);\n}\n\n/**\n * Build one building\u2011panel (name + up to 3 floors).\n * @param {HTMLElement} parent\n * @param {object}      building  \u2013 map.groups[groupId]\n * @param {string[]}    floorIds  \u2013 ordered list of floorIds to show (max 3)\n * @param {string}      highlight \u2013 floorId that should be highlighted\n */\nfunction renderBuildingPanel(parent,\n  building,\n  floorIds,\n  highlight,\n  distanceTxt) {\n  const panel = document.createElement(\"div\");\n  panel.className = \"il-direction-panel\";\n  panel.style.background = \"#222831\";            /* dark card */\n  panel.style.border = \"1px solid #3A3F47\";\n  panel.style.borderRadius = \"8px\";\n  panel.style.boxShadow = \"0 2px 4px rgba(0,0,0,0.12)\";\n  //  panel.style.padding = \"10px 16px\";\n  panel.style.padding = \"5px\";\n  panel.style.margin = \"5px\";\n  panel.style.minWidth = \"100px\";\n  panel.style.minHeight = \"90px\";   /* ensure consistent height */\n  panel.style.opacity = \"0.8\";\n\n  panel.style.fontFamily = \"'Roboto', sans-serif\";\n\n  const header = document.createElement(\"h4\");\n  header.textContent = building.name;\n  //header.style.margin = \"0 0 10px 0\";\n\n  header.style.fontSize = \"13px\";      /* 20\u202F% smaller */\n  header.style.fontWeight = \"600\";\n  header.style.color = \"#ffffff\";\n  header.style.fontFamily = \"'Roboto', sans-serif\";\n  header.style.textAlign = \"center\";\n  header.style.padding = \"0px 0px 5px 3px\";\n  header.style.margin = \"0px\";\n  panel.appendChild(header);\n  if (distanceTxt) {\n    const dist = document.createElement(\"div\");\n    dist.textContent = distanceTxt;\n    dist.style.fontSize = \"10px\";\n    dist.style.color = \"#ccc\";\n    dist.style.textAlign = \"center\";\n    dist.style.marginBottom = \"4px\";\n    panel.appendChild(dist);\n  }\n  const ul = document.createElement(\"ul\");\n  ul.className = \"il-floor-list\";\n  ul.style.listStyle = \"none\";\n  ul.style.margin = \"0\";\n  ul.style.padding = \"0\";\n\n  floorIds.forEach(fid => {\n    const li = document.createElement(\"li\");\n    li.style.display = \"flex\";\n    li.style.alignItems = \"center\";\n    li.style.fontSize = \"11px\";        /* 20\u202F% smaller */\n    li.style.fontFamily = \"'Roboto', sans-serif\";\n    li.style.marginBottom = \"4px\";\n\n    // little colored square\n    const box = document.createElement(\"span\");\n    box.style.display = \"inline-block\";\n    box.style.width = \"16px\";\n    box.style.height = \"16px\";\n    box.style.marginRight = \"6px\";\n    box.style.border = \"1px solid #444\";\n    box.style.borderRadius = \"3px\";\n\n    if (fid === highlight) {\n      box.style.backgroundColor = transitColor;\n    } else {\n      box.style.backgroundColor = deslectColor;\n    }\n\n    // label text\n    const label = document.createElement(\"span\");\n    label.textContent = building.layers[fid].name;\n    label.style.opacity = fid === highlight ? \"1\" : \"0.75\";\n    label.style.color = fid === highlight ? \"#ffffff\" : \"#d3d3d3\";\n\n    li.appendChild(box);\n    li.appendChild(label);\n    ul.appendChild(li);\n  });\n  panel.appendChild(ul);\n  parent.appendChild(panel);\n}\n\n/**\n * Render a transition strip with distance text between two panels.\n * @param {HTMLElement} parent\n * @param {string}      distanceText   e.g. \"42 m\"\n */\nfunction renderTransitionStrip(parent, distanceText) {\n  const strip = document.createElement(\"div\");\n  strip.className = \"il-transition-strip\";\n  strip.textContent = distanceText;\n  strip.style.padding = \"4px 12px\";\n  strip.style.background = \"#393E46\";\n  strip.style.border = \"1px solid #4f545c\";\n  strip.style.borderRadius = \"20px\";\n  strip.style.fontSize = \"11px\";       /* 20\u202F% smaller */\n  strip.style.fontWeight = \"500\";\n  strip.style.color = \"#f0f0f0\";\n  strip.style.fontFamily = \"'Roboto', sans-serif\";\n  parent.appendChild(strip);\n}\n\n/**\n * Create a navigation arrow button and attach click event.\n * @param {HTMLElement} parent  Where to append the button.\n * @param {\"prev\"|\"next\"} dir   Direction of navigation.\n * @param {boolean} [disabled=false]  Whether the button is disabled.\n */\nfunction createNavButton(parent, dir, disabled = false) {\n\n  const btn = document.createElement(\"div\");\n  btn.className = `il-nav-btn il-nav-${dir}`;\n  btn.textContent = dir === \"prev\" ? \"\u276E\" : \"\u276F\";   /* Unicode arrows */\n  Object.assign(btn.style, {\n    width: \"32px\",\n    height: \"32px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"20px\",\n    color: \"#ffffff\",\n    background: \"#222831\",\n    border: \"1px solid #3A3F47\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    userSelect: \"none\"\n  });\n\n  if (disabled) {\n    btn.style.opacity = \"0.3\";\n    btn.style.pointerEvents = \"none\";\n    btn.style.cursor = \"default\";\n  } else {\n    btn.addEventListener(\"click\", () => {\n      window.dispatchEvent(new CustomEvent(\n        dir === \"prev\" ? \"IndoorLens:directionPrev\"\n          : \"IndoorLens:directionNext\"));\n    });\n  }\n\n  parent.appendChild(btn);\n}\n\nexport function renderDirectionUI() {\n  const container =\n    document.getElementById(\"il-direction-container\") ||\n    canvasDirection.parentElement.appendChild(\n      Object.assign(document.createElement(\"div\"), {\n        id: \"il-direction-container\",\n        className: \"il-direction-wrap\"\n      })\n    );\n  container.innerHTML = \"\";\n  container.style.zIndex = 10;\n  Object.assign(container.style, {\n    position: \"absolute\",\n    top: \"40px\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    pointerEvents: \"auto\"\n  });\n\n  if (pathFindingResult && Object.keys(pathFindingResult).length !== 0) {\n    const currentIsTransit = map.groups[groupId]?.type === GroupType.TRANSIT;\n    if (currentIsTransit) {\n      renderPrimarySecondaryUI(container);\n    } else {\n      renderPrimaryUI(container);\n    }\n  } else {\n    renderStandByUI(container);\n  }\n\n}\n\nexport function renderStandByUI(container) {\n  if (!map || !groupId) return;\n  /* Choose the only building we will show (no secondary) */\n  const primaryId = groupId;          // current group is the only panel\n\n  /* ---------- render primary panel ---------- */\n  const primary = map.groups[primaryId];\n  const floors = Object.keys(primary.layers);\n\n  let displayFloors;\n  if (floors.length <= 3) {\n    displayFloors = floors;\n  } else {\n    const idx = floors.indexOf(String(layerId));\n    if (idx <= 0) displayFloors = floors.slice(0, 3);\n    else if (idx >= floors.length - 1) displayFloors = floors.slice(-3);\n    else displayFloors = floors.slice(idx - 1, idx + 2);\n  }\n  const highlightFloor = layerId;\n  renderBuildingPanel(\n    container,\n    primary,\n    [...displayFloors].reverse(),\n    highlightFloor,\n    \"\"\n  );\n\n}\n\n\n\nexport function renderPrimaryUI(container) {\n  if (!map || !groupId) return;\n\n  /* --- decide if we are at start or end of the overall path --- */\n  const pfLayer = pathFindingResult[groupId]?.[layerId] ?? {};\n\n  console.log(\"pfLayer\", JSON.stringify(pfLayer));\n\n  const startReached =\n    location_From?.id && pfLayer.startLocation?.id === location_From.id;\n  const endReached =\n    location_To?.id && pfLayer.endLocation?.id === location_To.id;\n\n  const hasPrev = !startReached;\n  const hasNext = !endReached;\n\n  /* nav button left */\n  createNavButton(container, \"prev\", !hasPrev);\n\n  /* -------- start label colour logic -------- */\n  //const pfLayer = pathFindingResult[groupId]?.[layerId] ?? {};\n  const startLocName = pfLayer.startLocation?.name || \"\";\n  const startLocId = pfLayer.startLocation?.id;\n  if (startLocName) {\n    const color =\n      location_To && location_To.id === startLocId\n        ? destColor\n        : location_From && location_From.id === startLocId\n          ? startColor\n          : \"#000\";\n    renderLocationLabel(container, \"left\", startLocName);\n    container.lastElementChild.style.color = color;\n    appendDashedConnector(container, 40);\n  }\n\n  /* Choose the only building we will show (no secondary) */\n  const primaryId = groupId;          // current group is the only panel\n\n  /* ---------- render primary panel ---------- */\n  const primary = map.groups[primaryId];\n  const floors = Object.keys(primary.layers);\n\n  let displayFloors;\n  if (floors.length <= 3) {\n    displayFloors = floors;\n  } else {\n    const idx = floors.indexOf(String(layerId));\n    if (idx <= 0) displayFloors = floors.slice(0, 3);\n    else if (idx >= floors.length - 1) displayFloors = floors.slice(-3);\n    else displayFloors = floors.slice(idx - 1, idx + 2);\n  }\n  const highlightFloor = layerId;\n\n  const primaryDistanceVal = pathFindingResult[primaryId]?.[layerId]?.distance ?? 0;\n  const primaryDistanceTxt = unit === \"ft\"\n    ? `${Math.round(primaryDistanceVal * 3.28084)} ft`\n    : `${Math.round(primaryDistanceVal)} m`;\n  renderBuildingPanel(\n    container,\n    primary,\n    [...displayFloors].reverse(),\n    highlightFloor,\n    primaryDistanceTxt\n  );\n  appendDashedConnector(container, 40);\n\n  /* -------- destination label colour logic -------- */\n  const endLocName = pfLayer.endLocation?.name || \"\";\n  const endLocId = pfLayer.endLocation?.id;\n  if (endLocName) {\n    const color =\n      location_To && location_To.id === endLocId\n        ? destColor\n        : location_From && location_From.id === endLocId\n          ? startColor\n          : \"#000\";\n    renderLocationLabel(container, \"right\", endLocName);\n    container.lastElementChild.style.color = color;\n  }\n  /* nav button right */\n  createNavButton(container, \"next\", !hasNext);\n}\n\n\n\nexport function renderPrimarySecondaryUI(container) {\n  if (!map || !groupId) return;\n\n  /* --- decide if we are at start or end of the overall path --- */\n  const pfLayer = pathFindingResult[groupId]?.[layerId] ?? {};\n  const startReached =\n    location_From?.id && pfLayer.startLocation.id === location_From.id;\n  const endReached =\n    location_To?.id && pfLayer.endLocation.id === location_To.id;\n\n  const hasPrev = !startReached;\n  const hasNext = !endReached;\n\n  /* nav button left */\n  createNavButton(container, \"prev\", !hasPrev);\n\n  /* ---------- figure out primary + secondary building logic (re\u2011use your existing code) ---------- */\n  let primaryId = pfLayer.startLocation.groupId;\n  let secondaryId = pfLayer.endLocation.groupId;\n\n  /* ---------- render primary panel ---------- */\n  const primary = map.groups[primaryId];\n  const floors = Object.keys(primary.layers);\n\n  let displayFloors;\n  if (floors.length <= 3) {\n    displayFloors = floors;\n  } else {\n    const idx = floors.indexOf(String(layerId));\n    if (idx <= 0) displayFloors = floors.slice(0, 3);\n    else if (idx >= floors.length - 1) displayFloors = floors.slice(-3);\n    else displayFloors = floors.slice(idx - 1, idx + 2);\n  }\n\n  renderBuildingPanel(\n    container,\n    primary,\n    [...displayFloors].reverse(),\n    //  highlightFloor,\n    pfLayer.startLocation.layerId,\n    \"\",\n    map.groups[primaryId]?.type === GroupType.TRANSIT\n  );\n\n  appendDashedConnector(container, 40);\n\n  /* ---------- possible transition strip + secondary panel ---------- */\n  const distanceVal = pathFindingResult[groupId]?.[layerId]?.distance;\n  const distanceTxt = distanceVal === undefined\n    ? null\n    : unit === \"ft\"\n      ? `${Math.round(distanceVal * 3.28084)} ft`\n      : `${Math.round(distanceVal)} m`;\n\n  // Only draw the chip if the current segment is Transit\n  renderTransitionStrip(container, distanceTxt);\n\n  /* right\u2011hand dashed connector so pill sits between two dashes */\n  appendDashedConnector(container, 40);\n\n  const secondary = map.groups[secondaryId];\n  const sfloors = Object.keys(secondary.layers);\n\n  renderBuildingPanel(\n    container,\n    secondary,\n    sfloors.slice(0, 3).reverse(),\n    //  sfloors[0],\n    pfLayer.endLocation.layerId,\n    \"\",\n    map.groups[secondaryId]?.type === GroupType.TRANSIT\n  );\n\n  /* nav button right */\n  createNavButton(container, \"next\", !hasNext);\n}\n\n// Handle clicks on the direction canvas navigation buttons\nfunction handleDirectionCanvasClick(e) {\n  if (!map || !pathFindingResult) return;\n  const rect = canvasDirection.getBoundingClientRect();\n  const mouseX = e.clientX - rect.left;\n  const mouseY = e.clientY - rect.top;\n  const cx = mouseX * (canvasDirection.width / rect.width);\n  const cy = mouseY * (canvasDirection.height / rect.height);\n\n  // Recalculate the same metrics you use in directionCanvas()\n  const floors = Object.keys(map.groups[groupId].layers);\n  const padding = 5, lineHeight = 20;\n  const headerHeight = lineHeight, boxSize = 16;\n  const rectHeight = headerHeight + padding + floors.length * (boxSize + padding) + padding;\n  const y0 = 120;\n  const centerY = y0 + rectHeight / 2;\n\n  // Image positions (60\u00D760, separated by 500px)\n  const imgSize = 60;\n  const halfSeparation = 250;\n  const centerX = canvasDirection.width / 2;\n  const leftX = centerX - halfSeparation - imgSize / 2;\n  const rightX = centerX + halfSeparation - imgSize / 2;\n  const topY = centerY - imgSize / 2;\n\n\n  // If the user clicked on the left icon\u2026\n  if (cx >= leftX && cx <= leftX + imgSize &&\n    cy >= topY && cy <= topY + imgSize) {\n\n    // Broadcast a \u201Cprevious step\u201D event\n    window.dispatchEvent(new CustomEvent('IndoorLens:directionPrev'));\n  }\n\n  // \u2026or on the right icon\n  if (cx >= rightX && cx <= rightX + imgSize &&\n    cy >= topY && cy <= topY + imgSize) {\n\n    // Broadcast a \u201Cnext step\u201D event\n    window.dispatchEvent(new CustomEvent('IndoorLens:directionNext'));\n  }\n}\n\nlet hoverNavLeft = false;\nlet hoverNavRight = false;\n\nfunction handleDirectionCanvasMove(e) {\n  // \u2026your existing code to compute cx, cy, leftX, rightX, topY, imgSize\u2026\n  if (!map || !pathFindingResult) return;\n  const rect = canvasDirection.getBoundingClientRect();\n  const mouseX = e.clientX - rect.left;\n  const mouseY = e.clientY - rect.top;\n  const cx = mouseX * (canvasDirection.width / rect.width);\n  const cy = mouseY * (canvasDirection.height / rect.height);\n\n  // Recalculate the same metrics you use in directionCanvas()\n  const floors = Object.keys(map.groups[groupId].layers);\n  const padding = 5, lineHeight = 20;\n  const headerHeight = lineHeight, boxSize = 16;\n  const rectHeight = headerHeight + padding + floors.length * (boxSize + padding) + padding;\n  const y0 = 120;\n  const centerY = y0 + rectHeight / 2;\n\n  // Image positions (60\u00D760, separated by 500px)\n  const imgSize = 60;\n  const halfSeparation = 250;\n  const centerX = canvasDirection.width / 2;\n  const leftX = centerX - halfSeparation - imgSize / 2;\n  const rightX = centerX + halfSeparation - imgSize / 2;\n  const topY = centerY - imgSize / 2;\n\n\n  const wasHoverLeft = hoverNavLeft;\n  const wasHoverRight = hoverNavRight;\n\n  hoverNavLeft = cx >= leftX && cx <= leftX + imgSize && cy >= topY && cy <= topY + imgSize;\n  hoverNavRight = cx >= rightX && cx <= rightX + imgSize && cy >= topY && cy <= topY + imgSize;\n\n  // \u2190 Insert the cursor update here:\n  canvasDirection.style.cursor = (hoverNavLeft || hoverNavRight) ? 'pointer' : 'default';\n\n  if (hoverNavLeft !== wasHoverLeft || hoverNavRight !== wasHoverRight) {\n    renderDirectionUI();\n  }\n}\n", "import {  LocationType } from \"../shared/models.js\";\n \nconst iconCache = new Map();     // filename -> { img, loaded }\n\nexport function loadIcon(filename) {\n  if (iconCache.has(filename)) return iconCache.get(filename);\n\n  const img = new Image();\n  img.crossOrigin = \"anonymous\";\n  img.src = `https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/${filename}`;   // <- use LocationIcons here\n  const entry = { img, loaded: false };\n  img.onload = () => {\n    entry.loaded = true;                                // redraw when it finishes\n    refreshViewport();\n    // console.log(\"icon loaded successfully\" + img.src);\n  };\n  iconCache.set(filename, entry);\n  return entry;\n}\n\n// 1. flat map of every legal value \u2192 filename\nconst ICON_MAP = {\n  // string keys\n  Exit: 'Exit.png',\n  Entrance: 'Entrance.png',\n  Restroom: 'Restroom.png',\n  FamilyRestroom: 'FamilyRestroom.png',\n  MaleRestroom: 'MaleRestroom.png',\n  FemaleRestroom: 'FemaleRestroom.png',\n  FireExtinguisher: 'FireExtinguisher.png',\n  Kiosk: 'Kiosk.png',\n  Information: 'Information.png',\n  Current_Kiosk: 'KioskCurrent.png',\n  MedicalKit: 'MedicalKit.png',\n  Stairs: 'Stairs.png',\n  Escalators: 'Escalators.png',\n  Cafeteria: 'Cafeteria.png',\n  FoodService: 'FoodService.png',\n  Taxi: 'Taxi.png',\n  Bus: 'Bus.png',\n  RideShare: 'RideShare.png',\n  Elevator: 'Elevator.png',\n  ServiceElevator: 'ServiceElevator.png',\n  CrateElevator: 'CrateElevator.png',\n  FreightElevator: 'FreightElevator.png',\n  TrashCompactor: 'TrashCompactor.png',\n  TrashOpenBox: 'TrashOpenBox.png',\n\n};\n\nexport function iconNameFromLocation(loc = {}) {\n  const typeKey = typeof loc.locationType === 'number'\n    ? LocationType[loc.locationType]\n    : loc.locationType;\n  return ICON_MAP[typeKey] ?? '';\n}\n\n", "import { styleOrder, DisplayType, GroupType } from \"../shared/models.js\";\nimport { createNavigator } from \"./navigation.js\";\nimport { map } from \"./editor.js\";\n//import { directionCanvas } from \"./UI/directionCanvas.js\";\nimport { renderDirectionUI } from \"./UI/directionCanvas.js\";\nimport { iconNameFromLocation, loadIcon } from \"./locationIcons.js\";\nimport { groupId, layerId, pathFindingResult, location_From, location_To, setLayerId, setGroupId } from \"./selection.js\";\n\n// Navigation button images\nconst btnImgLeft = new Image();\nbtnImgLeft.src = '/images/WalkLeft.png';\nconst btnImgRight = new Image();\nbtnImgRight.src = '/images/WalkRight.png';\nbtnImgLeft.onload = () => refreshViewport();\nbtnImgRight.onload = () => refreshViewport();\n\n\n// adjust path as needed\nexport let canvasSelection = null;\nexport let canvasMain = null;\nexport let canvasOverlay = null;\nexport let canvasDirection = null;\n\nexport let animationFrameId = null;\nexport let navigation = null;\n\nlet sctx = null;\nlet ctx = null;\nlet octx = null;\nexport let dctx = null;\n\nlet scale = null;\nlet pan = {};\nlet rotation = 0;          // radians\n\nlet pickColorMap = {};      // \"#RRGGBB\" \u2192 polygonId\nlet nextPickIndex = 0;\n\nlet isViewportAnimating = false;   // new\n\n//const highlightColor = '#2CA02C';  // fresh green\nconst standbyColor = '#7F7F7F';  // neutral medium-grey\nconst groupColor = \"rgb(240, 240, 240)\";  // neutral medium-grey\nconst pathColor = \"rgb(236, 35, 183)\";  // neutral medium-grey\n\n/** give the module a canva  let circlePos = null;s *after* it exists in the DOM */\nexport function initCanvas(_canvasSelection, _canvasMain, _canvasOverlay, _canvasDirection) {\n  canvasSelection = _canvasSelection;\n  canvasMain = _canvasMain;\n  canvasOverlay = _canvasOverlay;\n  canvasDirection = _canvasDirection;\n\n  // Let map interactions (pan/zoom) fall through this layer\n\n  sctx = canvasSelection.getContext(\"2d\");\n  ctx = canvasMain.getContext(\"2d\");\n  octx = canvasOverlay.getContext(\"2d\");\n  dctx = canvasDirection.getContext(\"2d\");\n\n\n\n\n  // Clear any previous overlay content\n  sctx.clearRect(0, 0, canvasSelection.width, canvasSelection.height);\n  ctx.clearRect(0, 0, canvasMain.width, canvasMain.height);\n  octx.clearRect(0, 0, canvasOverlay.width, canvasOverlay.height);\n  dctx.clearRect(0, 0, canvasDirection.width, canvasDirection.height);\n\n\n\n  canvasMain.addEventListener(\"dblclick\", e => {\n    \n    if(pathFindingResult) return;\n\n    const rect = canvasMain.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const px = Math.floor(x * (canvasMain.width / rect.width));\n    const py = Math.floor(y * (canvasMain.height / rect.height));\n\n    // Read from the background canvas\u2019 buffer, not the grid\n    const data = canvasSelection\n      .getContext(\"2d\")\n      .getImageData(px, py, 1, 1).data;  // [r,g,b,a]\n    const pickColor = `rgb(${data[0]},${data[1]},${data[2]})`;\n    const pickSelectionData = pickColorMap[pickColor];\n    if (!pickSelectionData) return;\n    // Debug logs\n    if (pickSelectionData.groupId) {\n      setGroupId(pickSelectionData.groupId);\n    }\n    if (pickSelectionData.layerId) {\n      setLayerId(pickSelectionData.layerId, true);\n    }\n\n    // focusOnGroup(pickSelectionData.groupId);\n    refreshViewport();\n  });\n\n  if (document.readyState === 'complete') {\n    resizeAllCanvases();\n  } else {\n    window.addEventListener('load', resizeAllCanvases, { once: true });\n  }\n\n  window.addEventListener(\"resize\", resizeAllCanvases);\n\n  window.addEventListener('IndoorLens:floorChangeDelegate', e => {\n    // updateDirections();\n    cancelAnimation();\n    animationFrameId = requestAnimationFrame(pathAnimation);\n    refreshViewport();\n  });\n\n  /* --------------------------------------------------------------\n      Spawn map centred in the canvas on first load\n   ----------------------------------------------------------------*/\n  const dpr = window.devicePixelRatio || 1;\n  const rect = canvasMain.getBoundingClientRect();\n\n  // Buffer\u2011pixel half\u2011size of the canvas\n  const screenCX = (rect.width * dpr) / 2;\n  const screenCY = (rect.height * dpr) / 2;\n\n  // World\u2011space centre of the current map\n\n\n  // Translate so that world\u2011centre appears at screen\u2011centre\n  const initialPan = {\n    dx: screenCX,\n    dy: screenCY\n  };\n\n  // Create the navigation with that initial pan\n  navigation = createNavigator(canvasMain, {\n    initialPan,\n    onUpdate: refreshViewportPure\n  });\n}\n\n// Your canvas drawing function\nfunction refreshViewportPure(viewTransform) {\n  // Sync legacy globals for code that still reads them\n  scale = viewTransform.scale;\n  pan.x = viewTransform.dx;\n  pan.y = viewTransform.dy;\n  rotation = viewTransform.rotation ?? 0;\n  // Clear canvas\n\n  mainCanvas();\n  selectionCanvas();\n  renderDirectionUI();\n}\n\nexport function resetViewport() {\n  const container = canvasMain.parentElement;\n  const rect = container.getBoundingClientRect();\n  const newW = rect.width * (window.devicePixelRatio || 1);\n  const newH = rect.height * (window.devicePixelRatio || 1);\n\n  canvasMain.width = newW;\n  canvasMain.height = newH;\n  requestAnimationFrame(() => {\n    // \u2026 your existing scale/dx/dy math and navigation.setTransform() \u2026\n    centerView(10);\n  });\n}\n\nexport function refreshViewport() {\n  console.log(\"refreshViewport\");\n  // Clear canvas\n  if (!navigation) return;\n  const viewTransform = navigation.getTransform();\n  if (!viewTransform) return;\n  // Sync legacy globals for code that still reads them\n  scale = viewTransform.scale;\n  pan.x = viewTransform.dx;\n  pan.y = viewTransform.dy;\n  rotation = viewTransform.rotation ?? 0;\n\n\n  mainCanvas();\n  selectionCanvas();\n  renderDirectionUI();\n}\n\n\nfunction mainCanvas() {\n  // Reset then clear\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.clearRect(0, 0, canvasMain.width, canvasMain.height);\n\n  // Combined scale + rotate + translate matrix\n  const cosR = Math.cos(rotation);\n  const sinR = Math.sin(rotation);\n\n  // a,b,c,d,e,f  \u2192  [ a c e ]\n  //                [ b d f ]\n  ctx.save();\n  ctx.setTransform(\n    scale * cosR,                    // a\n    scale * sinR,                    // b\n    -scale * sinR,                   // c\n    scale * cosR,                    // d\n    pan.x,                           // e\n    pan.y                            // f\n  );\n\n  drawMap();\n  ctx.restore();\n}\n\n\nfunction drawMap() {\n\n  if (!map) return;\n  //group entourage shape drawing\n\n  Object.entries(map.groups).forEach(([gId, group]) => {\n    if (group.type === GroupType.TRANSIT) return;\n\n    Object.entries(group.layers).forEach(([layId, layer]) => {\n      ctx.globalAlpha = 0.5;\n\n      const stylePolygonIds = layer.polygonsByStyle?.[\"floor\"];\n      if (!stylePolygonIds)  return;\n      \n      ctx.save();\n      stylePolygonIds.forEach(polyId => {\n        const polygon = layer.polygons[polyId];\n        ctx.fillStyle = groupColor;\n        ctx.beginPath();\n        polygon.points.forEach((p, i) => {\n          i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n        });\n        ctx.closePath();\n        ctx.fill();\n      });\n      ctx.restore();\n    });\n\n    if (gId !== groupId) {\n      ctx.globalAlpha = 1;\n      ctx.save();\n      // move to group centroid\n      ctx.translate(group.center.x, group.center.y);\n      // undo map rotation and scale\n      ctx.rotate(-rotation);\n      ctx.scale(1 / scale, 1 / scale);\n      ctx.fillStyle = \"#000\";\n      ctx.font = \"16px Arial\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(group.name, 0, 0);\n      ctx.restore();\n    }\n  });\n  ctx.globalAlpha = 1;\n\n  const group = map.groups[groupId];\n  if (!group) return;\n\n  const layer = group.layers[layerId];\n  if (!layer) return;\n\n  ctx.globalAlpha = 1;\n  ctx.save();\n  drawPolygons(layer);\n  drawLines(layer);\n  drawPath();\n  drawLocations(layer);\n  ctx.restore();\n\n\n}\n\nfunction drawPolygons(layer) {\n  // Draw polygons by styleOrder, not by Object.entries\n  styleOrder.forEach(styleId => {\n    const style = map.styles?.[styleId];\n    const stylePolygonIds = layer.polygonsByStyle?.[styleId];\n    if (!stylePolygonIds) return;\n\n    stylePolygonIds.forEach(polyId => {\n      const polygon = layer.polygons[polyId];\n      ctx.fillStyle = style.color;\n      ctx.beginPath();\n      polygon.points.forEach((p, i) => {\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.fill();\n    });\n  });\n\n  if (location_From) {\n    location_From.polygonIds.forEach(polyId => {\n      const poly = layer.polygons[polyId];\n      if (!poly) return;\n      ctx.fillStyle = \"rgb(179, 231, 212)\";\n      ctx.beginPath();\n      poly.points.forEach((p, i) =>\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y)\n      );\n      ctx.closePath();\n      ctx.fill();\n    });\n  }\n\n  if (location_To) {\n    location_To.polygonIds.forEach(polyId => {\n      const poly = layer.polygons[polyId];\n      if (!poly) return;\n\n      ctx.fillStyle = \"rgb(231, 179, 184)\";\n      ctx.beginPath();\n      poly.points.forEach((p, i) =>\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y)\n      );\n      ctx.closePath();\n      ctx.fill();\n    });\n  }\n}\n\nfunction drawLines(layer) {\n  styleOrder.forEach(styleId => {\n    const style = map.styles?.[styleId];\n    const styleLineIds = layer.linesByStyle?.[styleId];\n    if (!styleLineIds) return;\n\n    styleLineIds.forEach(lineId => {\n      const line = layer.lines[lineId];\n      if (!line) return;\n\n      const points = line.points;\n      if (!points) return;\n\n      //---- Segments Drawing---- \n      if (points.length >= 2) {\n        if (style) {\n          ctx.lineWidth = style.lineThickness / scale;\n          ctx.strokeStyle = style.color;\n          ctx.beginPath();\n          ctx.moveTo(points[0].x, points[0].y);\n          points.slice(1).forEach(p => ctx.lineTo(p.x, p.y));\n          ctx.stroke();\n        }\n\n        //  ctx.strokeStyle = standbyColor;//!style? pathColor:\n        //  ctx.lineWidth = 2 / scale;   // 1px on screen, regardless of zoom\n        //\n        //  ctx.beginPath();\n        //  ctx.moveTo(points[0].x, points[0].y);\n        //  for (let i = 1; i < points.length; i++) {\n        //    const point = points[i];\n        //    ctx.lineTo(point.x, point.y);\n        //  }\n        //  ctx.stroke();\n      }\n    });\n  });\n}\n\nfunction drawPath() {\n  if (!pathFindingResult || !Object.keys(pathFindingResult).length) return;\n  const buildingResult = pathFindingResult[groupId];\n  if (!buildingResult) { return; }\n  const floorResult = buildingResult[layerId];\n  if (!floorResult) { return; }\n\n  const points = floorResult.segment;\n  if (!points) return;\n\n  ctx.strokeStyle = pathColor;//!style? pathColor:\n  ctx.lineWidth = 2 / scale;   // 1px on screen, regardless of zoom\n\n  ctx.beginPath();\n  ctx.moveTo(points[0].x, points[0].y);\n  for (let i = 1; i < points.length; i++) {\n    const point = points[i];\n    ctx.lineTo(point.x, point.y);\n  }\n  ctx.stroke();\n  //  });\n}\n\n\nfunction drawLocations(layer) {\n\n  layer.locations.forEach(location => {\n    if (!location) return;\n    // ICONS --------------------------------------------------\n    if (location.displayType === DisplayType.Icon) {\n      const iconName = iconNameFromLocation(location);\n      const entry = loadIcon(iconName);\n\n      //  console.log(\"icon result \"+ entry);\n      if (entry.loaded) {\n        // Project world centre \u2192 screen coords (pan + scale + rotate)\n        const size = 36;\n        ctx.save();\n        // Move to screen position, then un\u2011rotate so icon faces \u201Cnorth\u201D\n        ctx.translate(location.center.x, location.center.y);\n        ctx.rotate(-rotation);\n        ctx.scale(1 / scale, 1 / scale); // 3. cancel zoom\n\n        ctx.drawImage(entry.img, -size / 2, -size / 2, size, size);\n        ctx.restore();\n      }\n    }\n\n    // LABELS -------------------------------------------------\n    if (location.displayType === DisplayType.Label) {\n      const label = location.name ?? location.locationType;\n      ctx.save();\n      ctx.translate(location.center.x, location.center.y);\n      ctx.rotate(-rotation);          // upright text\n      ctx.scale(1 / scale, 1 / scale);\n\n      ctx.font = \"20px Arial\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillStyle = \"#000\";\n      ctx.fillText(label, 0, 0);\n      ctx.restore();\n    }\n\n  });\n}\n\nfunction selectionCanvas() {\n  if (!map) return;\n\n\n  sctx.setTransform(1, 0, 0, 1, 0, 0);\n  sctx.clearRect(0, 0, canvasSelection.width, canvasSelection.height);\n\n  // Combined scale + rotate + translate matrix\n  const cosR = Math.cos(rotation);\n  const sinR = Math.sin(rotation);\n\n  // a,b,c,d,e,f  \u2192  [ a c e ]\n  //                [ b d f ]\n  sctx.save();\n  sctx.setTransform(\n    scale * cosR,                    // a\n    scale * sinR,                    // b\n    -scale * sinR,                   // c\n    scale * cosR,                    // d\n    pan.x,                           // e\n    pan.y                            // f\n  );\n  drawRGBSelection();\n  sctx.restore();\n}\n\n\nexport function drawRGBSelection() {\n\n\n  // Reset pick map and start index at 1 to avoid rgb(0,0,0)\n  pickColorMap = {};\n  nextPickIndex = 1;\n  Object.entries(map.groups).forEach(([gId, group]) => {\n\n    let drawGroupName = true;\n    Object.entries(group.layers).forEach(([layId, layer]) => {\n\n      const stylePolygonIds = layer.polygonsByStyle?.[\"floor\"];\n      if (!stylePolygonIds) {\n        return;\n      }\n      sctx.save();\n      stylePolygonIds.forEach(polyId => {\n        const polygon = layer.polygons[polyId];\n\n        // generate a unique pick-color for this polygon\n        const colorNum = nextPickIndex++;\n        const r = (colorNum >> 16) & 0xFF;\n        const g = (colorNum >> 8) & 0xFF;\n        const b = colorNum & 0xFF;\n        const pickColor = `rgb(${r},${g},${b})`;\n\n        pickColorMap[pickColor] = { groupId: gId, layerId: layId };\n\n        // draw the same polygon in pickColor\n        sctx.beginPath();\n        polygon.points.forEach((p, i) => {\n          if (i === 0) sctx.moveTo(p.x, p.y);\n          else sctx.lineTo(p.x, p.y);\n        });\n        sctx.closePath();\n        sctx.fillStyle = pickColor;\n        sctx.fill();\n\n      });\n      sctx.restore();\n\n    });\n  });\n\n\n}\n\nexport function drawOverlay(pivot, size) {\n  octx.setTransform(1, 0, 0, 1, 0, 0);\n  octx.clearRect(0, 0, size.width, size.height);\n\n\n  // move the origin to the correct buffer\u2010unit pivot\n  octx.translate(pivot.x, pivot.y);\n  //  octx.rotate(rotation);\n  octx.scale(scale, scale);\n\n\n}\n\nexport function resizeAllCanvases() {\n  const container = canvasMain.parentElement;\n  const rect = container.getBoundingClientRect();\n  const newW = rect.width * (window.devicePixelRatio || 1);\n  const newH = rect.height * (window.devicePixelRatio || 1);\n\n  [canvasSelection, canvasMain, canvasOverlay, canvasDirection].forEach(cv => {\n    cv.width = newW;\n    cv.height = newH;\n    cv.style.width = rect.width + 'px';\n    cv.style.height = rect.height + 'px';\n  });\n\n  refreshViewport();\n}\n\n\n\n\nlet distanceTraveled = 0; // world-space distance traveled along path\nlet segmentLengths = [];\nlet cumulativeLengths = [];\nlet totalPathLength = 0;\nlet speed = 7; // adjust as needed\n\nfunction lerp(a, b, t) {\n  return a + (b - a) * t;\n}\n\nfunction interpolate(p1, p2, t) {\n  return {                         // OLD: y came from p1.z / p2.z\n    x: lerp(p1.x, p2.x, t),\n    y: lerp(p1.y, p2.y, t)         // NEW: use p1.y / p2.y\n  };\n}\nexport function cancelAnimation() {\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId);\n    animationFrameId = null;\n  }\n  octx.clearRect(0, 0, canvasMain.width, canvasMain.height);\n\n  lastTime = null;          // <-- NEW\n  distanceTraveled = 0;     // <-- NEW\n  segmentLengths = [];\n  cumulativeLengths = [];\n  totalPathLength = 0;\n}\n\nlet lastTime = null; // time of last frame\nexport function pathAnimation(now) {\n\n\n\n  if (isViewportAnimating || !animationFrameId || !pathFindingResult) {               // wait for view to settle\n    animationFrameId = requestAnimationFrame(pathAnimation);\n    return;\n  }\n\n  const buildingResult = pathFindingResult[groupId];\n  if (!buildingResult) { return; }\n\n  const floorResult = buildingResult[layerId];\n  if (!floorResult) { return; }\n\n  const points = floorResult.segment;\n  if (!points || points.length < 2) { return; }\n\n  // spatial-distance\u2010based progress\n  if (segmentLengths.length !== points.length - 1) {\n    segmentLengths = [];\n    cumulativeLengths = [0];\n    totalPathLength = 0;\n    for (let i = 0; i < points.length - 1; i++) {\n      const dx = points[i + 1].x - points[i].x;\n      const dy = points[i + 1].y - points[i].y;\n      const len = Math.hypot(dx, dy);\n      segmentLengths.push(len);\n      totalPathLength += len;\n      cumulativeLengths.push(totalPathLength);\n    }\n  }\n\n  if (lastTime == null) lastTime = now;\n  const deltaSec = (now - lastTime) / 1000;\n  lastTime = now;\n  distanceTraveled = Math.min(distanceTraveled + speed * deltaSec, totalPathLength);\n\n  // find current segment index\n  let segment = 0;\n  while (segment + 1 < cumulativeLengths.length &&\n    cumulativeLengths[segment + 1] < distanceTraveled) {\n    segment++;\n  }\n  const segmentStart = cumulativeLengths[segment];\n  const segLen = segmentLengths[segment] || 0;\n  const localT = segLen > 0 ? (distanceTraveled - segmentStart) / segLen : 0;\n  const p1 = points[segment];\n  const p2 = points[segment + 1];\n  const pos = interpolate(p1, p2, localT);\n\n  if (distanceTraveled >= totalPathLength) {\n    distanceTraveled = 0;\n    lastTime = now;\n  }\n  octx.save()\n  // clear overlay and draw animated circle with world \u2192 screen transform\n  octx.setTransform(1, 0, 0, 1, 0, 0);\n  octx.clearRect(0, 0, canvasOverlay.width, canvasOverlay.height);\n\n  // --- World \u2192 screen (buffer\u2011pixel) using current navigation transform\n  // screen = scale * R * world + pan\n  const cosR = Math.cos(rotation);\n  const sinR = Math.sin(rotation);\n\n  const screenX = scale * (cosR * pos.x - sinR * pos.y) + pan.x;\n  const screenY = scale * (sinR * pos.x + cosR * pos.y) + pan.y;\n  const radius = 6;\n  octx.beginPath();\n  octx.arc(screenX, screenY, radius, 0, Math.PI * 2);\n  octx.fillStyle = 'red';\n  octx.fill();\n  octx.restore();\n  if (distanceTraveled < totalPathLength) {\n    animationFrameId = requestAnimationFrame(pathAnimation);\n  }\n}\n\n\nexport function setAnimationFrameId(newAnimationFrameId) {\n  animationFrameId = newAnimationFrameId;\n}\n\n\n\n\n/* ------------------------------------------------------------------------\n * Zoom\u2011and\u2011pan the new Navigator so a set of world\u2011vertices fills the view.\n * (No rotation support \u2013\u2011 the new nav is 2\u2011D only.)\n *\n * @param {Array<{x:number,y?:number,z?:number}>} verts   \u2013 vertices in world units\n * @param {object} [options]\n * @param {number} [options.padding=250]        \u2013 screen padding in CSS\u2011px\n * @param {number} [options.duration=500]       \u2013 ms animation duration\n * @param {number} [options.minScale=0.5]       \u2013 clamp\n * @param {number} [options.maxScale=100]       \u2013 clamp\n * --------------------------------------------------------------------- */\nexport function focusOnVertices(\n  verts,\n  {\n    padding = 250,\n    duration = 500,\n    minScale = 0.5,\n    maxScale = 100\n  } = {}\n) {\n  if (!navigation || !verts?.length) return;\n  /* 0. device pixel ratio + canvas extents */\n  const dpr = window.devicePixelRatio || 1;\n  const bufW = canvasMain.width;\n  const bufH = canvasMain.height;\n\n  /* 1. rotate every vertex into screen\u2011aligned coords,\n        then compute axis\u2011aligned bbox in that space */\n  /* 1. plain axis-aligned bbox \u2014 no pre-rotation */\n  let minX = Infinity, minY = Infinity;\n  let maxX = -Infinity, maxY = -Infinity;\n\n  verts.forEach(v => {\n    const vx = v.x;\n    const vy = (v.z ?? v.y);\n    if (vx == null || vy == null) return;\n    if (vx < minX) minX = vx;\n    if (vy < minY) minY = vy;\n    if (vx > maxX) maxX = vx;\n    if (vy > maxY) maxY = vy;\n  });\n\n  /* 2. choose scale exactly as before */\n  const cx = (minX + maxX) / 2;\n  const cy = (minY + maxY) / 2;\n  const bboxW = Math.max(maxX - minX, 1e-6);\n  const bboxH = Math.max(maxY - minY, 1e-6);\n\n  const availW = bufW - padding * dpr * 2;\n  const availH = bufH - padding * dpr * 2;\n  let targetScale = Math.min(availW / bboxW, availH / bboxH);\n  targetScale = Math.max(minScale, Math.min(maxScale, targetScale));\n\n  /* 3. pan so world-centre hits screen-centre *for the current rotation* */\n  const cosR = Math.cos(rotation);\n  const sinR = Math.sin(rotation);\n\n  const panX_target = (bufW / 2) - targetScale * (cosR * cx - sinR * cy);\n  const panY_target = (bufH / 2) - targetScale * (sinR * cx + cosR * cy);\n\n  /* 4. animate via navigation.setTransform({ scale, dx: panX_target, dy: panY_target }) */\n\n  /* 4. animate via Navigator */\n  const { scale: startScale, dx: startPanX, dy: startPanY, rotation: startRot } = navigation.getTransform();\n  const t0 = performance.now();\n  const ease = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n  const lerp = (a, b, t) => a + (b - a) * t;\n\n  function step(now) {\n    isViewportAnimating = true;\n    const traw = Math.min((now - t0) / duration, 1);\n    const t = ease(traw);\n\n    navigation.setTransform({\n      scale: lerp(startScale, targetScale, t),\n      dx: lerp(startPanX, panX_target, t),\n      dy: lerp(startPanY, panY_target, t),\n      rotation: startRot      // keep whatever rotation was active when focus began\n    });\n\n    if (traw < 1) requestAnimationFrame(step);\n    else isViewportAnimating = false;\n  }\n  requestAnimationFrame(step);\n}\n\n\nexport function focusOnLocation(locationId) {\n\n  setGroupId(location.groupId);\n  setLayerId(location.layerId);\n\n  if (location.polygonIds.length) {\n    const verts = [];\n    location.polygonIds.forEach(polygonId => {\n      const polygon = map.groups[location.groupId].layers[location.layerId].polygons[polygonId];\n      polygon.points.forEach(point => {\n        verts.push({ x: point.x, y: point.y });\n      });\n    });\n    //   console.log(\"forcus on vertices   \", JSON.stringify(verts));\n    if (verts.length) focusOnVertices(verts, { padding: 300 });\n  }\n}\n\nexport function focusOnGroup(groupId) {\n\n  const verts = [];\n  const group = map.groups[groupId];\n  if (!group) return;\n\n  Object.entries(group.layers).forEach(([layId, layer]) => {\n    ctx.save();\n    const stylePolygonIds = layer.polygonsByStyle?.[\"floor\"];\n    if (!stylePolygonIds) {\n      return;\n    }\n    stylePolygonIds.forEach(polygonId => {\n      const polygon = group.layers[layId].polygons[polygonId];\n      polygon.points.forEach(point => {\n        verts.push({ x: point.x, y: point.y });\n      });\n    });\n  });\n\n\n  //   console.log(\"forcus on vertices   \", JSON.stringify(verts));\n  if (verts.length) focusOnVertices(verts, { padding: 200 });\n}\n\n\nexport function focusOnLayer(groupId, layerId) {\n\n  const verts = [];\n  const group = map.groups[groupId];\n  if (!group) return;\n\n  const layer = group.layers[layerId];\n  if (!layer) return;\n\n\n  ctx.save();\n  const stylePolygonIds = layer.polygonsByStyle?.[\"floor\"];\n  if (!stylePolygonIds) {\n    return;\n  }\n  stylePolygonIds.forEach(polygonId => {\n    const polygon = layer.polygons[polygonId];\n    polygon.points.forEach(point => {\n      verts.push({ x: point.x, y: point.y });\n    });\n  });\n  if (verts.length) focusOnVertices(verts, { padding: 250 });\n}\n\n\nexport function centerView(targetScale = 6) {\n\n  console.log(\"reset centerView viewer\");\n  // 1. Work in *buffer* pixels (canvas.width / height already include DPR)\n  const bufW = canvasMain.width;      // e.g. 2560 on a 1280-CSS-px retina screen\n  const bufH = canvasMain.height;\n\n  // 2. World point you want at screen-centre.\n  const cx = 0;\n  const cy = 0;\n\n  // 3. Pan so that (cx,cy) \u2192 middle of the canvas\n  const dx = bufW / 2 - targetScale * cx;\n  const dy = bufH / 2 - targetScale * cy;\n\n  // 4. Commit it\n  navigation.setTransform({\n    scale: targetScale,\n    dx,       // = panX buffer-pixels\n    dy,       // = panY buffer-pixels\n    rotation: 0\n  });\n\n  // redraw (if your onUpdate handler doesn\u2019t already do it)\n  refreshViewport();\n}\n\n", "import { getMap } from \"./cloud.js\";\nimport { initCanvas, refreshViewport } from \"./draw.js\";\n//import { initDirectionCanvas } from \"./UI/directionCanvas.js\";\nimport { setMap } from \"./editor.js\";\nimport { initToolbar } from \"./UI/toolbar.js\";\nimport { initSearch } from \"./UI/searchbar.js\";\nimport { initDirectionUI } from \"./UI/directionCanvas.js\";\n \n\nexport class widget {\n  constructor(root, opts) {\n    this.root = root;          // <div> host element\n    this.opts = opts;\n  //  injectIndoorLensCSS();       // inject CSS once\n    // build all DOM elements inside the host and get references\n    const refs = buildIndoorLensDOM(this.root);\n\n    // initialize canvas rendering\n    initCanvas(refs.canvasSelection, refs.canvasMain, refs.canvasOverlay, refs.canvasDirection);\n  //  initDirectionCanvas();\ninitDirectionUI();\n    //initNavigation(refs.canvasMain, refreshViewport);\n    initToolbar();\n    initSearch();\n \n    const mapid = this.opts.mapid;\n    const loadingOverlay = document.getElementById(\"loadingOverlay\");\n    const deadOverlay = document.getElementById(\"deadOverlay\");\n\n    loadingOverlay?.classList.remove(\"hidden\");\n    deadOverlay?.classList.add(\"hidden\");\n\n    getMap({\n      mapid,\n      onSuccess: (mapJson) => {\n        setMap(mapJson);\n        console.log(\"Successfully loaded map width id:\", mapid);\n        loadingOverlay?.classList.add(\"hidden\");\n        deadOverlay?.classList.add(\"hidden\");\n        // initPathFinding();\n      },\n      onError: e => {\n        console.error(e);\n        console.error(\"Could not load map\");\n        loadingOverlay?.classList.add(\"hidden\");\n        deadOverlay?.classList.remove(\"hidden\");\n      }\n    })\n      .finally(() => {\n        refreshViewport();\n      });\n\n    requestAnimationFrame(() => refreshViewport());\n  }\n}\n\n\nasync function injectIndoorLensCSS() {\n  const cssText = await fetch('/dist/indoorlens-viewer.css').then(r => r.text());\n\n  const style = document.createElement('style');\n  style.id = \"indoorlens\u2011css\";\n  style.textContent = cssText;\n  document.head.appendChild(style);\n}\n\n\n/**\n * Dynamically constructs the HTML/CSS structure for the map widget.\n * @param {HTMLElement} host  container to append into\n * @param {{width:number, height:number}} opts\n * @returns {Object} references to created elements\n */\nexport function buildIndoorLensDOM(host ) {\n  // Ensure styles are loaded\n  injectIndoorLensCSS();\n \n  const wrapper = document.createElement(\"div\");\n  wrapper.id = \"canvasroot\";\n  wrapper.style.position = \"relative\";\n  wrapper.style.width = \"100%\";;\n  wrapper.style.height = \"100%\";;\n  wrapper.style.display = \"flex\";\n  wrapper.style.flexDirection = \"row\";\n  wrapper.style.alignItems = \"stretch\";\n  wrapper.style.backgroundColor = \"white\";\n  host.appendChild(wrapper);\n\n  // 1) create the flex wrapper as before\n  const uilayout = document.createElement(\"div\");\n  uilayout.className = \"ui-layout\";\n  uilayout.style.position = \"absolute\";\n  uilayout.style.top = \"0\";\n  uilayout.style.left = \"0\";\n  uilayout.style.width = \"100%\";\n  uilayout.style.height = \"100%\";\n  uilayout.style.zIndex = \"6\";\n  uilayout.style.backgroundColor = \"transparent\";\n  uilayout.style.pointerEvents = 'none';\n  wrapper.appendChild(uilayout);\n\n  // 3) create a container div for both canvases (80%)\n  const canvasesContainer = document.createElement(\"div\");\n  canvasesContainer.id = \"canvases-container\";\n  canvasesContainer.className = \"canvases-container\";\n  canvasesContainer.style.position = \"absolute\";\n  canvasesContainer.style.top = \"0\";\n  canvasesContainer.style.left = \"0\";\n  canvasesContainer.style.width = \"100%\";\n  canvasesContainer.style.height = \"100%\";\n  canvasesContainer.style.zIndex = \"0\";\n  // canvasesContainer.style.backgroundColor = \"transparent\";\n  wrapper.appendChild(canvasesContainer);\n\n\n  // 4) main canvas (fills container)\n  const canvasMain = document.createElement(\"canvas\");\n  canvasMain.id = \"canvasMain\";\n  canvasMain.className = \"canvas\";\n  canvasMain.style.position = \"absolute\";\n  canvasMain.style.top = \"0\";\n  canvasMain.style.left = \"0\";\n  canvasMain.style.width = \"100%\";\n  canvasMain.style.height = \"100%\";\n  canvasMain.style.zIndex = \"1\";\n\n  canvasesContainer.appendChild(canvasMain);\n\n\n\n  // 4) background canvas (fills container)\n  const canvasSelection = document.createElement(\"canvas\");\n  canvasSelection.id = \"canvasSelection\";\n  canvasSelection.className = \"canvas\";\n\n  //  canvasSelection.style.opacity = '0';          // fully transparent\n  // DEBUG: show the selection buffer on top\n  canvasSelection.style.position = 'absolute';\n  canvasSelection.style.top = '0';\n  canvasSelection.style.left = '0';\n  canvasSelection.style.zIndex = '1000';\n  canvasSelection.style.opacity = '0';\n  canvasSelection.style.pointerEvents = 'none';\n  canvasSelection.style.backgroundColor = \"transparent\";\n  canvasesContainer.appendChild(canvasSelection);\n\n\n\n  // 5)   canvas edit  (on top of main)\n  const canvasOverlay = document.createElement(\"canvas\");\n  canvasOverlay.id = \"canvasOverlay\";\n  canvasOverlay.className = \"canvas\";\n  canvasOverlay.style.position = \"absolute\";\n  canvasOverlay.style.top = \"0\";\n  canvasOverlay.style.left = \"0\";\n  canvasOverlay.style.width = \"100%\";\n  canvasOverlay.style.height = \"100%\";\n  canvasOverlay.style.zIndex = \"2\";\n  canvasOverlay.style.pointerEvents = 'none';\n  canvasOverlay.style.backgroundColor = \"transparent\";\n  canvasesContainer.appendChild(canvasOverlay);\n\n\n  // 5)   canvas edit  (on top of main)\n  const canvasDirection = document.createElement(\"canvas\");\n  canvasDirection.id = \"canvasDirection\";\n  canvasDirection.className = \"canvas \";\n  canvasDirection.style.position = \"absolute\";\n  canvasDirection.style.top = \"0\";\n  canvasDirection.style.left = \"0\";\n  canvasDirection.style.width = \"100%\";\n  canvasDirection.style.height = \"100%\";\n  canvasDirection.style.zIndex = \"5\";\n  canvasDirection.style.pointerEvents = 'none';\n  canvasesContainer.appendChild(canvasDirection);\n\n\n\n  // brand badge\n  uilayout.insertAdjacentHTML(\"beforeend\", `\n    <div  id=\"ownerBadge\"  class=\"brand-badge\">\n      <span id=\"ownerBadge\" >MapBoot.com</span>\n    </div>\n\n    <div class=\"location-badge\"  >\n      <span id=\"locationBadge\"></span>\n      <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/LocationPin.png\" alt=\"Location Pin\" />\n    </div>\n`);\n\n\n  /*-------- from --- to ------*/\n  uilayout.insertAdjacentHTML(\"beforeend\", `\n    <div id=\"searchBar\" class=\"search-bar\">\n      <div class=\"flex-col\">\n        <div class=\"input-group\">\n          <span class=\"input-tag\">From</span>\n          <input id=\"from\" type=\"text\" class=\"input-field\" placeholder=\"Search from\u2026\" />\n          <button id=\"btnFromClear\" class=\"input-clear\" disabled>&times;</button>\n        </div>\n        <ul id=\"fromResultsList\"  data-type=\"from\" class=\"results-list\"></ul>\n      </div>\n\n      <div class=\"flex-col\">\n        <div class=\"input-group\">\n          <span class=\"input-tag\">To</span>\n          <input id=\"to\" type=\"text\" class=\"input-field\" placeholder=\"Search to\u2026\" />\n          <button id=\"btnToClear\" class=\"input-clear\"  disabled>&times;</button>\n        </div>\n        <ul id=\"toResultsList\" data-type=\"to\" class=\"results-list\"></ul>\n      </div>\n    <!-- Directions banner -->\n    <div id=\"directionsBanner\" class=\"directions-banner hidden\">\n      <button id=\"prevDir\" class=\"dir-btn\" aria-label=\"Previous\">\n      <img src=\"/images/WalkRight.png\" alt=\"Walk\" width=\"16\" height=\"16\">\n      </button>\n\n      <button id=\"nextDir\" class=\"dir-btn\" aria-label=\"Next\">\n      <img src=\"/images/WalkRight.png\" alt=\"Walk\" width=\"16\" height=\"16\">\n      </button>\n    </div>\n  </div>  \n    `);\n\n  // after you insert the toolbar HTML\n  const searchBar = uilayout.querySelector('.search-bar');\n  searchBar.style.position = 'absolute';\n  searchBar.style.zIndex = '9';   // anything > 2\n  searchBar.style.pointerEvents = 'auto';\n\n\n\n  /*-------- toolbar ------*/\n  uilayout.insertAdjacentHTML(\"beforeend\", `\n   <div class=\"toolbar\">\n      <button id= \"fullscreenviewer\" class=\"panel-btn\">\n            <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Maximize.png\" alt=\"fullscreen link\" width=\"16\" height=\"16\">\n      </button>\n      <button id= \"centerviewer\" class=\"panel-btn\">\n            <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Center.png\" alt=\"fullscreen link\" width=\"16\" height=\"16\">\n      </button>\n    <button id= \"accessibility\" class=\"panel-btn\">\n            <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Wchr.png\" alt=\"Walk\" width=\"16\" height=\"16\">\n      </button>\n      <button id= \"copyLink\" class=\"panel-btn\">\n            <img src=\"/Images/Link.png\" alt=\"API link\" width=\"16\" height=\"16\">\n      </button>\n    </div>`);\n\n\n\n\n  /*-------- FloorToolbar ------*/\n  uilayout.insertAdjacentHTML(\"beforeend\", `\n   <div id=\"layersPanel\" class=\"toolbar\">\n            <button id=\"nextLayer\" class=\"panel-btn\">\n                  <img src=\"/images/Up.png\" alt=\"Walk\" width=\"16\" height=\"16\">\n            </button>\n            <button id=\"previousLayer\" class=\"panel-btn\">\n                  <img src=\"/images/Down.png\" alt=\"Walk\" width=\"16\" height=\"16\">\n            </button>\n    </div>`);\n\n  // Make all toolbars clickable\n  uilayout.querySelectorAll('.toolbar').forEach(tb => {\n    tb.style.position = 'absolute';\n    tb.style.zIndex = '10';\n    tb.style.pointerEvents = 'auto';\n  });\n\n  /*-------- Loading --- Offline ------*/\n  uilayout.insertAdjacentHTML(\"beforeend\", `\n    <div id=\"loadingOverlay\" class=\"loading-overlay hidden\">\n      <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Loader.png\" class=\"spin\" alt=\"loading\"/>\n    </div>\n    <div id=\"deadOverlay\" class=\"loading-overlay hidden\">\n      <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Dead.png\" alt=\"dead\"/>\n    </div>`);\n\n  const loadingOverlay = uilayout.querySelector('#loadingOverlay');\n  const deadOverlay = uilayout.querySelector('#deadOverlay');\n\n\n  //Viewer Limited logic\n  if (window.mapboot.type === \"viewer_limited\") {\n    const accessibilityBtn = uilayout.querySelector('#accessibility');\n    accessibilityBtn.style.display = 'none';\n\n    const searchBar = uilayout.querySelector('#searchBar');\n    searchBar.style.display = 'none';\n\n       const copyLinkBtn = uilayout.querySelector('#copyLink');\n    copyLinkBtn.style.display = 'none';\n  } \n  \n  // return refs\n  return {\n    canvasSelection: canvasSelection,\n    canvasMain: canvasMain,\n    canvasOverlay: canvasOverlay,\n    canvasDirection: canvasDirection,\n    loadingOverlay: loadingOverlay,\n    deadOverlay: deadOverlay\n  };\n}", "\n\n// indoorlens_viewer.js\nexport function init(options = {}) {\n  // 1) Parse and decode URL parameters internally\n  const params = new URLSearchParams(window.location.search);\n\n  // 2) Build config object, preferring URL params over passed-in options\n  let viewerType = params.get('type') ?? options.type;\n  if (viewerType) {\n    if (viewerType === \"viewer_limited\") viewerType = \"viewer_limited\";\n    else  viewerType = 'viewer';\n  } else {\n    viewerType = 'viewer';\n  }\n//https://localhost:5092/Builder/Viewer?map=cf6e9daa&type=viewer_limited\n  const cfg = {\n    target: options.target,\n    mapid: params.get('mapid') ?? options.mapid,\n    fromid: params.get('from') ?? options.fromid,\n    toid: params.get('to') ?? options.toid,\n    unit: options.unit,\n    wchr: options.wchr,\n    type: viewerType\n  };\n\n\n/* make the API available to non\u2011module scripts*/\nif (typeof window !== \"undefined\") {\n  window.mapboot = window.mapboot || {};\n  window.mapboot.init = init;   // \u2190 attaches the function\n} \n\n  // 2. Expose config globally for legacy access\n // window.mapboot = window.mapboot || {};\n  window.mapboot.cfg = { ...cfg };\n  Object.assign(window.mapboot, {\n    mapid: cfg.mapid,\n    fromid: cfg.fromid,\n    toid: cfg.toid,\n    type: cfg.type,\n  });\n\n  // 4) Debugging log\n  console.log(\n    'Initializing IndoorLens with:',\n    `mapid=${cfg.mapid}, fromid=${cfg.fromid}, toid=${cfg.toid}`\n  );\n\n  const host =\n    typeof cfg.target === \"string\"\n      ? document.querySelector(cfg.target)\n      : cfg.target;\n\n  if (!host) {\n    throw new Error(\"IndoorLens: target element not found\");\n  }\n\n  import(\"./widget.js\").then(({ widget }) => {\n    // do this:\n \n    //  window.mapboot = window.mapboot || {};\n    window.mapboot = new widget(host, cfg);\n  });\n}\n"],
  "mappings": "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",
  "names": ["floorColor", "publicColor", "privateColor", "innerWallColor", "outerWallColor", "GroupType", "StyleIds", "styleOrder", "StyleModel", "LocationType", "UnitType", "DisplayType", "init_models", "__esmMin", "id", "color", "lineThickness", "LayerModel", "GroupModel", "MapModel", "LocationModel", "PolygonModel", "init_models", "__esmMin", "src", "pid", "pData", "dict", "id", "layData", "layer", "gData", "group", "floorColor", "publicColor", "privateColor", "innerWallColor", "outerWallColor", "color", "lineThickness", "style", "StyleModel", "polyId", "poly", "sid", "lineId", "line", "getJson", "url", "headers", "resp", "getMap", "mapid", "onSuccess", "onError", "mapJson", "getMapURL", "err", "getLocations", "query", "locationsJson", "getLocationsURL", "getLocationById", "locationid", "res", "getLocationByIdURL", "json", "LocationModel", "getPathFinding", "fromlocationid", "tolocationid", "wchr", "pathFindingResultJson", "getPathFindingsURL", "init_cloud", "__esmMin", "init_models", "createNavigator", "canvas", "options", "onUpdate", "initialPan", "initialScale", "transform", "currentState", "STATES", "lastPointer", "stateHandlers", "EVENTS", "event", "getEventX", "getEventY", "handleRotate", "handleZoom", "handlePan", "screenToCanvas", "screenX", "screenY", "rect", "scaleX", "scaleY", "canvasX", "canvasY", "currentX", "currentY", "curCanvas", "prevCanvas", "deltaX", "deltaY", "factor", "zoomFactor", "mousePos", "newScale", "newDx", "newDy", "deltaRad", "s", "\u03B8", "dx", "dy", "cos\u03B8", "sin\u03B8", "wx", "wy", "\u03B82", "cos\u03B82", "sin\u03B82", "dispatch", "eventType", "handler", "nextState", "onPointerDown", "onPointerMove", "onPointerUp", "onWheel", "newTransform", "init_navigation", "__esmMin", "setPathFindingResult", "newResult", "pathFindingResult", "layersPanel", "resetPathFinding", "isFrom", "location_From", "location_To", "setGroupId", "id", "groupId", "setLocation_From", "location", "setLocation_To", "setWchr", "v", "wchr", "setUnit", "unit", "setLayerId", "newLayerId", "dofocusOnLayer", "layerId", "group", "map", "focusOnLayer", "payload", "refreshViewport", "init_selection", "__esmMin", "init_draw", "init_editor", "init_models", "startDirection", "dirEl", "banner", "pathFindingResult", "directionsList", "bId", "layers", "layId", "seg", "anchorIdx", "d", "location_From", "currentIdx", "render", "segment", "setGroupId", "setLayerId", "smartFocus", "resetDirections", "buildingResult", "groupId", "floorResult", "layerId", "points", "verts", "point", "group", "map", "layer", "stylePolygonIds", "polyId", "p", "i", "focusOnVertices", "init_direction", "__esmMin", "init_selection", "init_draw", "init_editor", "findPath", "mapid", "fromlocationid", "tolocationid", "wchr", "unit", "resetDirections", "cancelAnimation", "animationFrameId", "pathAnimation", "setAnimationFrameId", "loadingOverlay", "deadOverlay", "getPathFinding", "pathJson", "setPathFindingResult", "e", "startDirection", "refreshViewport", "init_findPath", "__esmMin", "init_draw", "init_selection", "init_direction", "init_cloud", "initSearch", "inputFrom", "inputTo", "resultsListFrom", "resultsListTo", "btnFromClear", "btnToClear", "setLocation_To", "resetPathFinding", "setPathFindingResult", "cancelAnimation", "refreshViewport", "setLocation_From", "textSearch", "query", "onSearchInput", "resultsList", "searchTimeout", "searchLocations", "mapid", "map", "getLocations", "locationsJson", "result", "rawLocation", "location_From", "location_To", "locationAddress", "makeLocationAddress", "e", "normalizeForSearch", "str", "capitalizeFirst", "location", "groupId", "layerId", "displayName", "group", "buildingName", "layer", "floorName", "parts", "D", "B", "F", "inputField", "li", "findPath", "wchr", "unit", "setGroupId", "setLayerId", "verts", "polygonId", "point", "focusOnVertices", "init_searchbar", "__esmMin", "init_draw", "init_findPath", "init_editor", "init_selection", "init_cloud", "initToolbar", "centerBtn", "fullScreenBtn", "accessibilityBtn", "nextLayerBtn", "previousLayerBtn", "copyLinkBtn", "root", "centerView", "setWchr", "wchr", "updateAccessibilityIcon", "location_From", "location_To", "findPath", "map", "unit", "fullscreen", "updateFullscreenIcon", "resizeAllCanvases", "nextLayerId", "group", "currentId", "keys", "curIdx", "newLayerIndex", "previousLayerId", "groupId", "newLayerId", "layerId", "setLayerId", "params", "link", "img", "init_toolbar", "__esmMin", "init_draw", "init_selection", "init_editor", "init_findPath", "setMap", "json", "map", "MapModel", "setWchr", "setUnit", "autoLoadActionFromURL", "autoSelection", "updateAccessibilityIcon", "locationBadge", "ownerBadge", "mapId", "fromId", "toId", "fromLoc", "toLoc", "getLocationById", "setLocation_From", "setLocation_To", "location_From", "location_To", "findPath", "wchr", "unit", "inputFrom", "makeLocationAddress", "btnFromClear", "inputTo", "btnToClear", "focusOnLocation", "address", "firstGroupId", "setGroupId", "group", "firstLayerId", "setLayerId", "init_editor", "__esmMin", "init_models", "init_findPath", "init_draw", "init_cloud", "init_searchbar", "init_toolbar", "init_selection", "appendDashedConnector", "parent", "width", "dash", "renderLocationLabel", "side", "labelText", "wrap", "label", "line", "initDirectionUI", "container", "canvasDirection", "handleDirectionCanvasClick", "handleDirectionCanvasMove", "renderBuildingPanel", "building", "floorIds", "highlight", "distanceTxt", "panel", "header", "dist", "ul", "fid", "li", "box", "transitColor", "deslectColor", "renderTransitionStrip", "distanceText", "strip", "createNavButton", "dir", "disabled", "btn", "renderDirectionUI", "pathFindingResult", "map", "groupId", "GroupType", "renderPrimarySecondaryUI", "renderPrimaryUI", "renderStandByUI", "primaryId", "primary", "floors", "displayFloors", "idx", "layerId", "highlightFloor", "pfLayer", "startReached", "location_From", "endReached", "location_To", "hasPrev", "hasNext", "startLocName", "startLocId", "color", "destColor", "startColor", "primaryDistanceVal", "primaryDistanceTxt", "unit", "endLocName", "endLocId", "secondaryId", "distanceVal", "secondary", "sfloors", "rect", "mouseX", "mouseY", "cx", "cy", "padding", "centerY", "imgSize", "halfSeparation", "centerX", "leftX", "rightX", "topY", "wasHoverLeft", "hoverNavLeft", "wasHoverRight", "hoverNavRight", "init_directionCanvas", "__esmMin", "init_editor", "init_draw", "init_selection", "init_models", "loadIcon", "filename", "iconCache", "img", "entry", "iconNameFromLocation", "loc", "typeKey", "LocationType", "ICON_MAP", "init_locationIcons", "__esmMin", "init_models", "initCanvas", "_canvasSelection", "_canvasMain", "_canvasOverlay", "_canvasDirection", "canvasSelection", "canvasMain", "canvasOverlay", "canvasDirection", "sctx", "ctx", "octx", "dctx", "e", "pathFindingResult", "rect", "x", "y", "px", "py", "data", "pickColor", "pickSelectionData", "pickColorMap", "setGroupId", "setLayerId", "refreshViewport", "resizeAllCanvases", "cancelAnimation", "animationFrameId", "pathAnimation", "dpr", "screenCX", "screenCY", "navigation", "createNavigator", "refreshViewportPure", "viewTransform", "scale", "pan", "rotation", "mainCanvas", "selectionCanvas", "renderDirectionUI", "cosR", "sinR", "drawMap", "map", "gId", "group", "GroupType", "layId", "layer", "stylePolygonIds", "polyId", "polygon", "groupColor", "p", "i", "groupId", "layerId", "drawPolygons", "drawLines", "drawPath", "drawLocations", "styleOrder", "styleId", "style", "location_From", "poly", "location_To", "styleLineIds", "lineId", "line", "points", "buildingResult", "floorResult", "pathColor", "point", "location", "DisplayType", "iconName", "iconNameFromLocation", "entry", "loadIcon", "label", "drawRGBSelection", "nextPickIndex", "drawGroupName", "colorNum", "r", "g", "b", "newW", "newH", "cv", "lerp", "a", "t", "interpolate", "p1", "p2", "lastTime", "distanceTraveled", "segmentLengths", "cumulativeLengths", "totalPathLength", "now", "isViewportAnimating", "dx", "dy", "len", "deltaSec", "speed", "segment", "segmentStart", "segLen", "localT", "pos", "screenX", "screenY", "radius", "setAnimationFrameId", "newAnimationFrameId", "focusOnVertices", "verts", "padding", "duration", "minScale", "maxScale", "bufW", "bufH", "minX", "minY", "maxX", "maxY", "v", "vx", "vy", "cx", "cy", "bboxW", "bboxH", "availW", "availH", "targetScale", "panX_target", "panY_target", "startScale", "startPanX", "startPanY", "startRot", "t0", "ease", "step", "traw", "focusOnLocation", "locationId", "polygonId", "focusOnLayer", "centerView", "btnImgLeft", "btnImgRight", "init_draw", "__esmMin", "init_models", "init_navigation", "init_editor", "init_directionCanvas", "init_locationIcons", "init_selection", "widget_exports", "__export", "buildIndoorLensDOM", "widget", "injectIndoorLensCSS", "cssText", "r", "style", "host", "wrapper", "uilayout", "canvasesContainer", "canvasMain", "canvasSelection", "canvasOverlay", "canvasDirection", "searchBar", "tb", "loadingOverlay", "deadOverlay", "accessibilityBtn", "copyLinkBtn", "init_widget", "__esmMin", "init_cloud", "init_draw", "init_editor", "init_toolbar", "init_searchbar", "init_directionCanvas", "root", "opts", "refs", "initCanvas", "initDirectionUI", "initToolbar", "initSearch", "mapid", "getMap", "mapJson", "setMap", "e", "refreshViewport", "init", "options", "params", "viewerType", "cfg", "host", "widget"]
}
